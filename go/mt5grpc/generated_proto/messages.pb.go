// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.31.1
// source: messages.proto

package mt5grpcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Rates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          []int64                `protobuf:"varint,1,rep,packed,name=time,proto3" json:"time,omitempty"`
	High          []float64              `protobuf:"fixed64,2,rep,packed,name=high,proto3" json:"high,omitempty"`
	Low           []float64              `protobuf:"fixed64,3,rep,packed,name=low,proto3" json:"low,omitempty"`
	Open          []float64              `protobuf:"fixed64,4,rep,packed,name=open,proto3" json:"open,omitempty"`
	Close         []float64              `protobuf:"fixed64,5,rep,packed,name=close,proto3" json:"close,omitempty"`
	RealVolume    []float64              `protobuf:"fixed64,6,rep,packed,name=real_volume,json=realVolume,proto3" json:"real_volume,omitempty"`
	TickVolume    []float64              `protobuf:"fixed64,7,rep,packed,name=tick_volume,json=tickVolume,proto3" json:"tick_volume,omitempty"`
	Spread        []float64              `protobuf:"fixed64,8,rep,packed,name=spread,proto3" json:"spread,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rates) Reset() {
	*x = Rates{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rates) ProtoMessage() {}

func (x *Rates) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rates.ProtoReflect.Descriptor instead.
func (*Rates) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Rates) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Rates) GetHigh() []float64 {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *Rates) GetLow() []float64 {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *Rates) GetOpen() []float64 {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *Rates) GetClose() []float64 {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *Rates) GetRealVolume() []float64 {
	if x != nil {
		return x.RealVolume
	}
	return nil
}

func (x *Rates) GetTickVolume() []float64 {
	if x != nil {
		return x.TickVolume
	}
	return nil
}

func (x *Rates) GetSpread() []float64 {
	if x != nil {
		return x.Spread
	}
	return nil
}

type Ticks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          []int64                `protobuf:"varint,1,rep,packed,name=time,proto3" json:"time,omitempty"`
	Bid           []float64              `protobuf:"fixed64,2,rep,packed,name=bid,proto3" json:"bid,omitempty"`
	Ask           []float64              `protobuf:"fixed64,3,rep,packed,name=ask,proto3" json:"ask,omitempty"`
	Last          []float64              `protobuf:"fixed64,4,rep,packed,name=last,proto3" json:"last,omitempty"`
	Volume        []uint64               `protobuf:"varint,5,rep,packed,name=volume,proto3" json:"volume,omitempty"`
	TimeMsc       []int64                `protobuf:"varint,6,rep,packed,name=time_msc,json=timeMsc,proto3" json:"time_msc,omitempty"`
	Flags         []TickFlag             `protobuf:"varint,7,rep,packed,name=flags,proto3,enum=TickFlag" json:"flags,omitempty"`
	VolumeReal    []float64              `protobuf:"fixed64,8,rep,packed,name=volume_real,json=volumeReal,proto3" json:"volume_real,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ticks) Reset() {
	*x = Ticks{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticks) ProtoMessage() {}

func (x *Ticks) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticks.ProtoReflect.Descriptor instead.
func (*Ticks) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Ticks) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Ticks) GetBid() []float64 {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *Ticks) GetAsk() []float64 {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *Ticks) GetLast() []float64 {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *Ticks) GetVolume() []uint64 {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Ticks) GetTimeMsc() []int64 {
	if x != nil {
		return x.TimeMsc
	}
	return nil
}

func (x *Ticks) GetFlags() []TickFlag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Ticks) GetVolumeReal() []float64 {
	if x != nil {
		return x.VolumeReal
	}
	return nil
}

type Tick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          int64                  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Bid           float64                `protobuf:"fixed64,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask           float64                `protobuf:"fixed64,3,opt,name=ask,proto3" json:"ask,omitempty"`
	Last          float64                `protobuf:"fixed64,4,opt,name=last,proto3" json:"last,omitempty"`
	Volume        uint64                 `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	TimeMsc       int64                  `protobuf:"varint,6,opt,name=time_msc,json=timeMsc,proto3" json:"time_msc,omitempty"`
	Flags         uint32                 `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	VolumeReal    float64                `protobuf:"fixed64,8,opt,name=volume_real,json=volumeReal,proto3" json:"volume_real,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tick) Reset() {
	*x = Tick{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Tick) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Tick) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *Tick) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *Tick) GetLast() float64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *Tick) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Tick) GetTimeMsc() int64 {
	if x != nil {
		return x.TimeMsc
	}
	return 0
}

func (x *Tick) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Tick) GetVolumeReal() float64 {
	if x != nil {
		return x.VolumeReal
	}
	return 0
}

type CopyRatesRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timeframe     TimeFrame              `protobuf:"varint,2,opt,name=timeframe,proto3,enum=TimeFrame" json:"timeframe,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyRatesRangeRequest) Reset() {
	*x = CopyRatesRangeRequest{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyRatesRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRatesRangeRequest) ProtoMessage() {}

func (x *CopyRatesRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRatesRangeRequest.ProtoReflect.Descriptor instead.
func (*CopyRatesRangeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *CopyRatesRangeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CopyRatesRangeRequest) GetTimeframe() TimeFrame {
	if x != nil {
		return x.Timeframe
	}
	return TimeFrame_TIMEFRAME_UNSPECIFIED
}

func (x *CopyRatesRangeRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CopyRatesRangeRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type CopyRatesFromRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timeframe     TimeFrame              `protobuf:"varint,2,opt,name=timeframe,proto3,enum=TimeFrame" json:"timeframe,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	Count         int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyRatesFromRequest) Reset() {
	*x = CopyRatesFromRequest{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyRatesFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRatesFromRequest) ProtoMessage() {}

func (x *CopyRatesFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRatesFromRequest.ProtoReflect.Descriptor instead.
func (*CopyRatesFromRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *CopyRatesFromRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CopyRatesFromRequest) GetTimeframe() TimeFrame {
	if x != nil {
		return x.Timeframe
	}
	return TimeFrame_TIMEFRAME_UNSPECIFIED
}

func (x *CopyRatesFromRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CopyRatesFromRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CopyRatesFromPosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Timeframe     TimeFrame              `protobuf:"varint,2,opt,name=timeframe,proto3,enum=TimeFrame" json:"timeframe,omitempty"`
	StartPos      int64                  `protobuf:"varint,3,opt,name=start_pos,json=startPos,proto3" json:"start_pos,omitempty"`
	Count         int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyRatesFromPosRequest) Reset() {
	*x = CopyRatesFromPosRequest{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyRatesFromPosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRatesFromPosRequest) ProtoMessage() {}

func (x *CopyRatesFromPosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRatesFromPosRequest.ProtoReflect.Descriptor instead.
func (*CopyRatesFromPosRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *CopyRatesFromPosRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CopyRatesFromPosRequest) GetTimeframe() TimeFrame {
	if x != nil {
		return x.Timeframe
	}
	return TimeFrame_TIMEFRAME_UNSPECIFIED
}

func (x *CopyRatesFromPosRequest) GetStartPos() int64 {
	if x != nil {
		return x.StartPos
	}
	return 0
}

func (x *CopyRatesFromPosRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CopyTicksFromRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Flags         int32                  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyTicksFromRequest) Reset() {
	*x = CopyTicksFromRequest{}
	mi := &file_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTicksFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTicksFromRequest) ProtoMessage() {}

func (x *CopyTicksFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyTicksFromRequest.ProtoReflect.Descriptor instead.
func (*CopyTicksFromRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CopyTicksFromRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CopyTicksFromRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CopyTicksFromRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CopyTicksFromRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type CopyTicksRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Flags         int32                  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyTicksRangeRequest) Reset() {
	*x = CopyTicksRangeRequest{}
	mi := &file_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTicksRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTicksRangeRequest) ProtoMessage() {}

func (x *CopyTicksRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyTicksRangeRequest.ProtoReflect.Descriptor instead.
func (*CopyTicksRangeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *CopyTicksRangeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CopyTicksRangeRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CopyTicksRangeRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *CopyTicksRangeRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type CopyRatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rates         *Rates                 `protobuf:"bytes,1,opt,name=rates,proto3" json:"rates,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyRatesResponse) Reset() {
	*x = CopyRatesResponse{}
	mi := &file_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRatesResponse) ProtoMessage() {}

func (x *CopyRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRatesResponse.ProtoReflect.Descriptor instead.
func (*CopyRatesResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *CopyRatesResponse) GetRates() *Rates {
	if x != nil {
		return x.Rates
	}
	return nil
}

func (x *CopyRatesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CopyTicksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticks         *Ticks                 `protobuf:"bytes,1,opt,name=ticks,proto3" json:"ticks,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyTicksResponse) Reset() {
	*x = CopyTicksResponse{}
	mi := &file_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTicksResponse) ProtoMessage() {}

func (x *CopyTicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyTicksResponse.ProtoReflect.Descriptor instead.
func (*CopyTicksResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *CopyTicksResponse) GetTicks() *Ticks {
	if x != nil {
		return x.Ticks
	}
	return nil
}

func (x *CopyTicksResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolsGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         *string                `protobuf:"bytes,1,opt,name=group,proto3,oneof" json:"group,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsGetRequest) Reset() {
	*x = SymbolsGetRequest{}
	mi := &file_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsGetRequest) ProtoMessage() {}

func (x *SymbolsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsGetRequest.ProtoReflect.Descriptor instead.
func (*SymbolsGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *SymbolsGetRequest) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *SymbolsGetRequest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolsGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []*SymbolInfo          `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsGetResponse) Reset() {
	*x = SymbolsGetResponse{}
	mi := &file_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsGetResponse) ProtoMessage() {}

func (x *SymbolsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsGetResponse.ProtoReflect.Descriptor instead.
func (*SymbolsGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *SymbolsGetResponse) GetSymbols() []*SymbolInfo {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *SymbolsGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolInfo struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Custom                  bool                   `protobuf:"varint,1,opt,name=custom,proto3" json:"custom,omitempty"`
	Select                  bool                   `protobuf:"varint,2,opt,name=select,proto3" json:"select,omitempty"`
	Visible                 bool                   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
	SpreadFloat             bool                   `protobuf:"varint,4,opt,name=spread_float,json=spreadFloat,proto3" json:"spread_float,omitempty"`
	MarginHedgedUseLeg      bool                   `protobuf:"varint,5,opt,name=margin_hedged_use_leg,json=marginHedgedUseLeg,proto3" json:"margin_hedged_use_leg,omitempty"`
	ChartMode               SymbolChartMode        `protobuf:"varint,10,opt,name=chart_mode,json=chartMode,proto3,enum=SymbolChartMode" json:"chart_mode,omitempty"`
	SessionDeals            int32                  `protobuf:"varint,11,opt,name=session_deals,json=sessionDeals,proto3" json:"session_deals,omitempty"`
	SessionBuyOrders        int32                  `protobuf:"varint,12,opt,name=session_buy_orders,json=sessionBuyOrders,proto3" json:"session_buy_orders,omitempty"`
	SessionSellOrders       int32                  `protobuf:"varint,13,opt,name=session_sell_orders,json=sessionSellOrders,proto3" json:"session_sell_orders,omitempty"`
	Volume                  int32                  `protobuf:"varint,14,opt,name=volume,proto3" json:"volume,omitempty"`
	Volumehigh              int32                  `protobuf:"varint,15,opt,name=volumehigh,proto3" json:"volumehigh,omitempty"`
	Volumelow               int32                  `protobuf:"varint,16,opt,name=volumelow,proto3" json:"volumelow,omitempty"`
	Digits                  int32                  `protobuf:"varint,17,opt,name=digits,proto3" json:"digits,omitempty"`
	Spread                  int32                  `protobuf:"varint,18,opt,name=spread,proto3" json:"spread,omitempty"`
	TicksBookdepth          int32                  `protobuf:"varint,19,opt,name=ticks_bookdepth,json=ticksBookdepth,proto3" json:"ticks_bookdepth,omitempty"`
	TradeCalcMode           SymbolCalcMode         `protobuf:"varint,20,opt,name=trade_calc_mode,json=tradeCalcMode,proto3,enum=SymbolCalcMode" json:"trade_calc_mode,omitempty"`
	TradeMode               SymbolTradeMode        `protobuf:"varint,21,opt,name=trade_mode,json=tradeMode,proto3,enum=SymbolTradeMode" json:"trade_mode,omitempty"`
	TradeStopsLevel         int32                  `protobuf:"varint,22,opt,name=trade_stops_level,json=tradeStopsLevel,proto3" json:"trade_stops_level,omitempty"`
	TradeFreezeLevel        int32                  `protobuf:"varint,23,opt,name=trade_freeze_level,json=tradeFreezeLevel,proto3" json:"trade_freeze_level,omitempty"`
	TradeExemode            int32                  `protobuf:"varint,24,opt,name=trade_exemode,json=tradeExemode,proto3" json:"trade_exemode,omitempty"`
	SwapMode                SymbolSwapMode         `protobuf:"varint,25,opt,name=swap_mode,json=swapMode,proto3,enum=SymbolSwapMode" json:"swap_mode,omitempty"`
	SwapRollover3Days       int32                  `protobuf:"varint,26,opt,name=swap_rollover3days,json=swapRollover3days,proto3" json:"swap_rollover3days,omitempty"`
	ExpirationMode          SymbolTradeExecution   `protobuf:"varint,27,opt,name=expiration_mode,json=expirationMode,proto3,enum=SymbolTradeExecution" json:"expiration_mode,omitempty"`
	FillingMode             int32                  `protobuf:"varint,28,opt,name=filling_mode,json=fillingMode,proto3" json:"filling_mode,omitempty"`
	OrderMode               int32                  `protobuf:"varint,29,opt,name=order_mode,json=orderMode,proto3" json:"order_mode,omitempty"`
	OrderGtcMode            SymbolOrderGTCMode     `protobuf:"varint,30,opt,name=order_gtc_mode,json=orderGtcMode,proto3,enum=SymbolOrderGTCMode" json:"order_gtc_mode,omitempty"`
	OptionMode              SymbolOptionMode       `protobuf:"varint,31,opt,name=option_mode,json=optionMode,proto3,enum=SymbolOptionMode" json:"option_mode,omitempty"`
	OptionRight             SymbolOptionRight      `protobuf:"varint,32,opt,name=option_right,json=optionRight,proto3,enum=SymbolOptionRight" json:"option_right,omitempty"`
	Time                    int64                  `protobuf:"varint,40,opt,name=time,proto3" json:"time,omitempty"`
	StartTime               int64                  `protobuf:"varint,41,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ExpirationTime          int64                  `protobuf:"varint,42,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Bid                     float64                `protobuf:"fixed64,50,opt,name=bid,proto3" json:"bid,omitempty"`
	Bidhigh                 float64                `protobuf:"fixed64,51,opt,name=bidhigh,proto3" json:"bidhigh,omitempty"`
	Bidlow                  float64                `protobuf:"fixed64,52,opt,name=bidlow,proto3" json:"bidlow,omitempty"`
	Ask                     float64                `protobuf:"fixed64,53,opt,name=ask,proto3" json:"ask,omitempty"`
	Askhigh                 float64                `protobuf:"fixed64,54,opt,name=askhigh,proto3" json:"askhigh,omitempty"`
	Asklow                  float64                `protobuf:"fixed64,55,opt,name=asklow,proto3" json:"asklow,omitempty"`
	Last                    float64                `protobuf:"fixed64,56,opt,name=last,proto3" json:"last,omitempty"`
	Lasthigh                float64                `protobuf:"fixed64,57,opt,name=lasthigh,proto3" json:"lasthigh,omitempty"`
	Lastlow                 float64                `protobuf:"fixed64,58,opt,name=lastlow,proto3" json:"lastlow,omitempty"`
	VolumeReal              float64                `protobuf:"fixed64,59,opt,name=volume_real,json=volumeReal,proto3" json:"volume_real,omitempty"`
	VolumehighReal          float64                `protobuf:"fixed64,60,opt,name=volumehigh_real,json=volumehighReal,proto3" json:"volumehigh_real,omitempty"`
	VolumelowReal           float64                `protobuf:"fixed64,61,opt,name=volumelow_real,json=volumelowReal,proto3" json:"volumelow_real,omitempty"`
	OptionStrike            float64                `protobuf:"fixed64,62,opt,name=option_strike,json=optionStrike,proto3" json:"option_strike,omitempty"`
	Point                   float64                `protobuf:"fixed64,63,opt,name=point,proto3" json:"point,omitempty"`
	TradeTickValue          float64                `protobuf:"fixed64,64,opt,name=trade_tick_value,json=tradeTickValue,proto3" json:"trade_tick_value,omitempty"`
	TradeTickValueProfit    float64                `protobuf:"fixed64,65,opt,name=trade_tick_value_profit,json=tradeTickValueProfit,proto3" json:"trade_tick_value_profit,omitempty"`
	TradeTickValueLoss      float64                `protobuf:"fixed64,66,opt,name=trade_tick_value_loss,json=tradeTickValueLoss,proto3" json:"trade_tick_value_loss,omitempty"`
	TradeTickSize           float64                `protobuf:"fixed64,67,opt,name=trade_tick_size,json=tradeTickSize,proto3" json:"trade_tick_size,omitempty"`
	TradeContractSize       float64                `protobuf:"fixed64,68,opt,name=trade_contract_size,json=tradeContractSize,proto3" json:"trade_contract_size,omitempty"`
	TradeAccruedInterest    float64                `protobuf:"fixed64,69,opt,name=trade_accrued_interest,json=tradeAccruedInterest,proto3" json:"trade_accrued_interest,omitempty"`
	TradeFaceValue          float64                `protobuf:"fixed64,70,opt,name=trade_face_value,json=tradeFaceValue,proto3" json:"trade_face_value,omitempty"`
	TradeLiquidityRate      float64                `protobuf:"fixed64,71,opt,name=trade_liquidity_rate,json=tradeLiquidityRate,proto3" json:"trade_liquidity_rate,omitempty"`
	VolumeMin               float64                `protobuf:"fixed64,72,opt,name=volume_min,json=volumeMin,proto3" json:"volume_min,omitempty"`
	VolumeMax               float64                `protobuf:"fixed64,73,opt,name=volume_max,json=volumeMax,proto3" json:"volume_max,omitempty"`
	VolumeStep              float64                `protobuf:"fixed64,74,opt,name=volume_step,json=volumeStep,proto3" json:"volume_step,omitempty"`
	VolumeLimit             float64                `protobuf:"fixed64,75,opt,name=volume_limit,json=volumeLimit,proto3" json:"volume_limit,omitempty"`
	SwapLong                float64                `protobuf:"fixed64,76,opt,name=swap_long,json=swapLong,proto3" json:"swap_long,omitempty"`
	SwapShort               float64                `protobuf:"fixed64,77,opt,name=swap_short,json=swapShort,proto3" json:"swap_short,omitempty"`
	MarginInitial           float64                `protobuf:"fixed64,78,opt,name=margin_initial,json=marginInitial,proto3" json:"margin_initial,omitempty"`
	MarginMaintenance       float64                `protobuf:"fixed64,79,opt,name=margin_maintenance,json=marginMaintenance,proto3" json:"margin_maintenance,omitempty"`
	SessionVolume           float64                `protobuf:"fixed64,80,opt,name=session_volume,json=sessionVolume,proto3" json:"session_volume,omitempty"`
	SessionTurnover         float64                `protobuf:"fixed64,81,opt,name=session_turnover,json=sessionTurnover,proto3" json:"session_turnover,omitempty"`
	SessionInterest         float64                `protobuf:"fixed64,82,opt,name=session_interest,json=sessionInterest,proto3" json:"session_interest,omitempty"`
	SessionBuyOrdersVolume  float64                `protobuf:"fixed64,83,opt,name=session_buy_orders_volume,json=sessionBuyOrdersVolume,proto3" json:"session_buy_orders_volume,omitempty"`
	SessionSellOrdersVolume float64                `protobuf:"fixed64,84,opt,name=session_sell_orders_volume,json=sessionSellOrdersVolume,proto3" json:"session_sell_orders_volume,omitempty"`
	SessionOpen             float64                `protobuf:"fixed64,85,opt,name=session_open,json=sessionOpen,proto3" json:"session_open,omitempty"`
	SessionClose            float64                `protobuf:"fixed64,86,opt,name=session_close,json=sessionClose,proto3" json:"session_close,omitempty"`
	SessionAw               float64                `protobuf:"fixed64,87,opt,name=session_aw,json=sessionAw,proto3" json:"session_aw,omitempty"`
	SessionPriceSettlement  float64                `protobuf:"fixed64,88,opt,name=session_price_settlement,json=sessionPriceSettlement,proto3" json:"session_price_settlement,omitempty"`
	SessionPriceLimitMin    float64                `protobuf:"fixed64,89,opt,name=session_price_limit_min,json=sessionPriceLimitMin,proto3" json:"session_price_limit_min,omitempty"`
	SessionPriceLimitMax    float64                `protobuf:"fixed64,90,opt,name=session_price_limit_max,json=sessionPriceLimitMax,proto3" json:"session_price_limit_max,omitempty"`
	MarginHedged            float64                `protobuf:"fixed64,91,opt,name=margin_hedged,json=marginHedged,proto3" json:"margin_hedged,omitempty"`
	PriceChange             float64                `protobuf:"fixed64,92,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	PriceVolatility         float64                `protobuf:"fixed64,93,opt,name=price_volatility,json=priceVolatility,proto3" json:"price_volatility,omitempty"`
	PriceTheoretical        float64                `protobuf:"fixed64,94,opt,name=price_theoretical,json=priceTheoretical,proto3" json:"price_theoretical,omitempty"`
	PriceGreeksDelta        float64                `protobuf:"fixed64,95,opt,name=price_greeks_delta,json=priceGreeksDelta,proto3" json:"price_greeks_delta,omitempty"`
	PriceGreeksTheta        float64                `protobuf:"fixed64,96,opt,name=price_greeks_theta,json=priceGreeksTheta,proto3" json:"price_greeks_theta,omitempty"`
	PriceGreeksGamma        float64                `protobuf:"fixed64,97,opt,name=price_greeks_gamma,json=priceGreeksGamma,proto3" json:"price_greeks_gamma,omitempty"`
	PriceGreeksVega         float64                `protobuf:"fixed64,98,opt,name=price_greeks_vega,json=priceGreeksVega,proto3" json:"price_greeks_vega,omitempty"`
	PriceGreeksRho          float64                `protobuf:"fixed64,99,opt,name=price_greeks_rho,json=priceGreeksRho,proto3" json:"price_greeks_rho,omitempty"`
	PriceGreeksOmega        float64                `protobuf:"fixed64,100,opt,name=price_greeks_omega,json=priceGreeksOmega,proto3" json:"price_greeks_omega,omitempty"`
	PriceSensitivity        float64                `protobuf:"fixed64,101,opt,name=price_sensitivity,json=priceSensitivity,proto3" json:"price_sensitivity,omitempty"`
	Basis                   string                 `protobuf:"bytes,110,opt,name=basis,proto3" json:"basis,omitempty"`
	Category                string                 `protobuf:"bytes,111,opt,name=category,proto3" json:"category,omitempty"`
	CurrencyBase            string                 `protobuf:"bytes,112,opt,name=currency_base,json=currencyBase,proto3" json:"currency_base,omitempty"`
	CurrencyProfit          string                 `protobuf:"bytes,113,opt,name=currency_profit,json=currencyProfit,proto3" json:"currency_profit,omitempty"`
	CurrencyMargin          string                 `protobuf:"bytes,114,opt,name=currency_margin,json=currencyMargin,proto3" json:"currency_margin,omitempty"`
	Bank                    string                 `protobuf:"bytes,115,opt,name=bank,proto3" json:"bank,omitempty"`
	Description             string                 `protobuf:"bytes,116,opt,name=description,proto3" json:"description,omitempty"`
	Exchange                string                 `protobuf:"bytes,117,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Formula                 string                 `protobuf:"bytes,118,opt,name=formula,proto3" json:"formula,omitempty"`
	Isin                    string                 `protobuf:"bytes,119,opt,name=isin,proto3" json:"isin,omitempty"`
	Name                    string                 `protobuf:"bytes,120,opt,name=name,proto3" json:"name,omitempty"`
	Page                    string                 `protobuf:"bytes,121,opt,name=page,proto3" json:"page,omitempty"`
	Path                    string                 `protobuf:"bytes,122,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SymbolInfo) Reset() {
	*x = SymbolInfo{}
	mi := &file_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolInfo) ProtoMessage() {}

func (x *SymbolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolInfo.ProtoReflect.Descriptor instead.
func (*SymbolInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *SymbolInfo) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *SymbolInfo) GetSelect() bool {
	if x != nil {
		return x.Select
	}
	return false
}

func (x *SymbolInfo) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SymbolInfo) GetSpreadFloat() bool {
	if x != nil {
		return x.SpreadFloat
	}
	return false
}

func (x *SymbolInfo) GetMarginHedgedUseLeg() bool {
	if x != nil {
		return x.MarginHedgedUseLeg
	}
	return false
}

func (x *SymbolInfo) GetChartMode() SymbolChartMode {
	if x != nil {
		return x.ChartMode
	}
	return SymbolChartMode_SYMBOL_CHART_MODE_BID
}

func (x *SymbolInfo) GetSessionDeals() int32 {
	if x != nil {
		return x.SessionDeals
	}
	return 0
}

func (x *SymbolInfo) GetSessionBuyOrders() int32 {
	if x != nil {
		return x.SessionBuyOrders
	}
	return 0
}

func (x *SymbolInfo) GetSessionSellOrders() int32 {
	if x != nil {
		return x.SessionSellOrders
	}
	return 0
}

func (x *SymbolInfo) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SymbolInfo) GetVolumehigh() int32 {
	if x != nil {
		return x.Volumehigh
	}
	return 0
}

func (x *SymbolInfo) GetVolumelow() int32 {
	if x != nil {
		return x.Volumelow
	}
	return 0
}

func (x *SymbolInfo) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *SymbolInfo) GetSpread() int32 {
	if x != nil {
		return x.Spread
	}
	return 0
}

func (x *SymbolInfo) GetTicksBookdepth() int32 {
	if x != nil {
		return x.TicksBookdepth
	}
	return 0
}

func (x *SymbolInfo) GetTradeCalcMode() SymbolCalcMode {
	if x != nil {
		return x.TradeCalcMode
	}
	return SymbolCalcMode_SYMBOL_CALC_MODE_FOREX
}

func (x *SymbolInfo) GetTradeMode() SymbolTradeMode {
	if x != nil {
		return x.TradeMode
	}
	return SymbolTradeMode_SYMBOL_TRADE_MODE_DISABLED
}

func (x *SymbolInfo) GetTradeStopsLevel() int32 {
	if x != nil {
		return x.TradeStopsLevel
	}
	return 0
}

func (x *SymbolInfo) GetTradeFreezeLevel() int32 {
	if x != nil {
		return x.TradeFreezeLevel
	}
	return 0
}

func (x *SymbolInfo) GetTradeExemode() int32 {
	if x != nil {
		return x.TradeExemode
	}
	return 0
}

func (x *SymbolInfo) GetSwapMode() SymbolSwapMode {
	if x != nil {
		return x.SwapMode
	}
	return SymbolSwapMode_SYMBOL_SWAP_MODE_DISABLED
}

func (x *SymbolInfo) GetSwapRollover3Days() int32 {
	if x != nil {
		return x.SwapRollover3Days
	}
	return 0
}

func (x *SymbolInfo) GetExpirationMode() SymbolTradeExecution {
	if x != nil {
		return x.ExpirationMode
	}
	return SymbolTradeExecution_SYMBOL_TRADE_EXECUTION_REQUEST
}

func (x *SymbolInfo) GetFillingMode() int32 {
	if x != nil {
		return x.FillingMode
	}
	return 0
}

func (x *SymbolInfo) GetOrderMode() int32 {
	if x != nil {
		return x.OrderMode
	}
	return 0
}

func (x *SymbolInfo) GetOrderGtcMode() SymbolOrderGTCMode {
	if x != nil {
		return x.OrderGtcMode
	}
	return SymbolOrderGTCMode_SYMBOL_ORDERS_GTC
}

func (x *SymbolInfo) GetOptionMode() SymbolOptionMode {
	if x != nil {
		return x.OptionMode
	}
	return SymbolOptionMode_SYMBOL_OPTION_MODE_EUROPEAN
}

func (x *SymbolInfo) GetOptionRight() SymbolOptionRight {
	if x != nil {
		return x.OptionRight
	}
	return SymbolOptionRight_SYMBOL_OPTION_RIGHT_CALL
}

func (x *SymbolInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SymbolInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SymbolInfo) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *SymbolInfo) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *SymbolInfo) GetBidhigh() float64 {
	if x != nil {
		return x.Bidhigh
	}
	return 0
}

func (x *SymbolInfo) GetBidlow() float64 {
	if x != nil {
		return x.Bidlow
	}
	return 0
}

func (x *SymbolInfo) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *SymbolInfo) GetAskhigh() float64 {
	if x != nil {
		return x.Askhigh
	}
	return 0
}

func (x *SymbolInfo) GetAsklow() float64 {
	if x != nil {
		return x.Asklow
	}
	return 0
}

func (x *SymbolInfo) GetLast() float64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *SymbolInfo) GetLasthigh() float64 {
	if x != nil {
		return x.Lasthigh
	}
	return 0
}

func (x *SymbolInfo) GetLastlow() float64 {
	if x != nil {
		return x.Lastlow
	}
	return 0
}

func (x *SymbolInfo) GetVolumeReal() float64 {
	if x != nil {
		return x.VolumeReal
	}
	return 0
}

func (x *SymbolInfo) GetVolumehighReal() float64 {
	if x != nil {
		return x.VolumehighReal
	}
	return 0
}

func (x *SymbolInfo) GetVolumelowReal() float64 {
	if x != nil {
		return x.VolumelowReal
	}
	return 0
}

func (x *SymbolInfo) GetOptionStrike() float64 {
	if x != nil {
		return x.OptionStrike
	}
	return 0
}

func (x *SymbolInfo) GetPoint() float64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *SymbolInfo) GetTradeTickValue() float64 {
	if x != nil {
		return x.TradeTickValue
	}
	return 0
}

func (x *SymbolInfo) GetTradeTickValueProfit() float64 {
	if x != nil {
		return x.TradeTickValueProfit
	}
	return 0
}

func (x *SymbolInfo) GetTradeTickValueLoss() float64 {
	if x != nil {
		return x.TradeTickValueLoss
	}
	return 0
}

func (x *SymbolInfo) GetTradeTickSize() float64 {
	if x != nil {
		return x.TradeTickSize
	}
	return 0
}

func (x *SymbolInfo) GetTradeContractSize() float64 {
	if x != nil {
		return x.TradeContractSize
	}
	return 0
}

func (x *SymbolInfo) GetTradeAccruedInterest() float64 {
	if x != nil {
		return x.TradeAccruedInterest
	}
	return 0
}

func (x *SymbolInfo) GetTradeFaceValue() float64 {
	if x != nil {
		return x.TradeFaceValue
	}
	return 0
}

func (x *SymbolInfo) GetTradeLiquidityRate() float64 {
	if x != nil {
		return x.TradeLiquidityRate
	}
	return 0
}

func (x *SymbolInfo) GetVolumeMin() float64 {
	if x != nil {
		return x.VolumeMin
	}
	return 0
}

func (x *SymbolInfo) GetVolumeMax() float64 {
	if x != nil {
		return x.VolumeMax
	}
	return 0
}

func (x *SymbolInfo) GetVolumeStep() float64 {
	if x != nil {
		return x.VolumeStep
	}
	return 0
}

func (x *SymbolInfo) GetVolumeLimit() float64 {
	if x != nil {
		return x.VolumeLimit
	}
	return 0
}

func (x *SymbolInfo) GetSwapLong() float64 {
	if x != nil {
		return x.SwapLong
	}
	return 0
}

func (x *SymbolInfo) GetSwapShort() float64 {
	if x != nil {
		return x.SwapShort
	}
	return 0
}

func (x *SymbolInfo) GetMarginInitial() float64 {
	if x != nil {
		return x.MarginInitial
	}
	return 0
}

func (x *SymbolInfo) GetMarginMaintenance() float64 {
	if x != nil {
		return x.MarginMaintenance
	}
	return 0
}

func (x *SymbolInfo) GetSessionVolume() float64 {
	if x != nil {
		return x.SessionVolume
	}
	return 0
}

func (x *SymbolInfo) GetSessionTurnover() float64 {
	if x != nil {
		return x.SessionTurnover
	}
	return 0
}

func (x *SymbolInfo) GetSessionInterest() float64 {
	if x != nil {
		return x.SessionInterest
	}
	return 0
}

func (x *SymbolInfo) GetSessionBuyOrdersVolume() float64 {
	if x != nil {
		return x.SessionBuyOrdersVolume
	}
	return 0
}

func (x *SymbolInfo) GetSessionSellOrdersVolume() float64 {
	if x != nil {
		return x.SessionSellOrdersVolume
	}
	return 0
}

func (x *SymbolInfo) GetSessionOpen() float64 {
	if x != nil {
		return x.SessionOpen
	}
	return 0
}

func (x *SymbolInfo) GetSessionClose() float64 {
	if x != nil {
		return x.SessionClose
	}
	return 0
}

func (x *SymbolInfo) GetSessionAw() float64 {
	if x != nil {
		return x.SessionAw
	}
	return 0
}

func (x *SymbolInfo) GetSessionPriceSettlement() float64 {
	if x != nil {
		return x.SessionPriceSettlement
	}
	return 0
}

func (x *SymbolInfo) GetSessionPriceLimitMin() float64 {
	if x != nil {
		return x.SessionPriceLimitMin
	}
	return 0
}

func (x *SymbolInfo) GetSessionPriceLimitMax() float64 {
	if x != nil {
		return x.SessionPriceLimitMax
	}
	return 0
}

func (x *SymbolInfo) GetMarginHedged() float64 {
	if x != nil {
		return x.MarginHedged
	}
	return 0
}

func (x *SymbolInfo) GetPriceChange() float64 {
	if x != nil {
		return x.PriceChange
	}
	return 0
}

func (x *SymbolInfo) GetPriceVolatility() float64 {
	if x != nil {
		return x.PriceVolatility
	}
	return 0
}

func (x *SymbolInfo) GetPriceTheoretical() float64 {
	if x != nil {
		return x.PriceTheoretical
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksDelta() float64 {
	if x != nil {
		return x.PriceGreeksDelta
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksTheta() float64 {
	if x != nil {
		return x.PriceGreeksTheta
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksGamma() float64 {
	if x != nil {
		return x.PriceGreeksGamma
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksVega() float64 {
	if x != nil {
		return x.PriceGreeksVega
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksRho() float64 {
	if x != nil {
		return x.PriceGreeksRho
	}
	return 0
}

func (x *SymbolInfo) GetPriceGreeksOmega() float64 {
	if x != nil {
		return x.PriceGreeksOmega
	}
	return 0
}

func (x *SymbolInfo) GetPriceSensitivity() float64 {
	if x != nil {
		return x.PriceSensitivity
	}
	return 0
}

func (x *SymbolInfo) GetBasis() string {
	if x != nil {
		return x.Basis
	}
	return ""
}

func (x *SymbolInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SymbolInfo) GetCurrencyBase() string {
	if x != nil {
		return x.CurrencyBase
	}
	return ""
}

func (x *SymbolInfo) GetCurrencyProfit() string {
	if x != nil {
		return x.CurrencyProfit
	}
	return ""
}

func (x *SymbolInfo) GetCurrencyMargin() string {
	if x != nil {
		return x.CurrencyMargin
	}
	return ""
}

func (x *SymbolInfo) GetBank() string {
	if x != nil {
		return x.Bank
	}
	return ""
}

func (x *SymbolInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SymbolInfo) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *SymbolInfo) GetFormula() string {
	if x != nil {
		return x.Formula
	}
	return ""
}

func (x *SymbolInfo) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *SymbolInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SymbolInfo) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *SymbolInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SymbolInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolInfoRequest) Reset() {
	*x = SymbolInfoRequest{}
	mi := &file_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolInfoRequest) ProtoMessage() {}

func (x *SymbolInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolInfoRequest.ProtoReflect.Descriptor instead.
func (*SymbolInfoRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *SymbolInfoRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolInfo    *SymbolInfo            `protobuf:"bytes,1,opt,name=symbol_info,json=symbolInfo,proto3" json:"symbol_info,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolInfoResponse) Reset() {
	*x = SymbolInfoResponse{}
	mi := &file_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolInfoResponse) ProtoMessage() {}

func (x *SymbolInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolInfoResponse.ProtoReflect.Descriptor instead.
func (*SymbolInfoResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *SymbolInfoResponse) GetSymbolInfo() *SymbolInfo {
	if x != nil {
		return x.SymbolInfo
	}
	return nil
}

func (x *SymbolInfoResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolsTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolsTotal  int64                  `protobuf:"varint,1,opt,name=symbols_total,json=symbolsTotal,proto3" json:"symbols_total,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsTotalResponse) Reset() {
	*x = SymbolsTotalResponse{}
	mi := &file_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsTotalResponse) ProtoMessage() {}

func (x *SymbolsTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsTotalResponse.ProtoReflect.Descriptor instead.
func (*SymbolsTotalResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *SymbolsTotalResponse) GetSymbolsTotal() int64 {
	if x != nil {
		return x.SymbolsTotal
	}
	return 0
}

func (x *SymbolsTotalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolInfoTickRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolInfoTickRequest) Reset() {
	*x = SymbolInfoTickRequest{}
	mi := &file_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolInfoTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolInfoTickRequest) ProtoMessage() {}

func (x *SymbolInfoTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolInfoTickRequest.ProtoReflect.Descriptor instead.
func (*SymbolInfoTickRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *SymbolInfoTickRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolInfoTickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tick          *Tick                  `protobuf:"bytes,1,opt,name=tick,proto3" json:"tick,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolInfoTickResponse) Reset() {
	*x = SymbolInfoTickResponse{}
	mi := &file_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolInfoTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolInfoTickResponse) ProtoMessage() {}

func (x *SymbolInfoTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolInfoTickResponse.ProtoReflect.Descriptor instead.
func (*SymbolInfoTickResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *SymbolInfoTickResponse) GetTick() *Tick {
	if x != nil {
		return x.Tick
	}
	return nil
}

func (x *SymbolInfoTickResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SymbolSelectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Enable        bool                   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolSelectRequest) Reset() {
	*x = SymbolSelectRequest{}
	mi := &file_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolSelectRequest) ProtoMessage() {}

func (x *SymbolSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolSelectRequest.ProtoReflect.Descriptor instead.
func (*SymbolSelectRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *SymbolSelectRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SymbolSelectRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SymbolSelectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolSelectResponse) Reset() {
	*x = SymbolSelectResponse{}
	mi := &file_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolSelectResponse) ProtoMessage() {}

func (x *SymbolSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolSelectResponse.ProtoReflect.Descriptor instead.
func (*SymbolSelectResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *SymbolSelectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SymbolSelectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TradeOrder struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ticket         int64                  `protobuf:"varint,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	TimeSetup      int64                  `protobuf:"varint,2,opt,name=time_setup,json=timeSetup,proto3" json:"time_setup,omitempty"`
	TimeSetupMsc   int64                  `protobuf:"varint,3,opt,name=time_setup_msc,json=timeSetupMsc,proto3" json:"time_setup_msc,omitempty"`
	TimeDone       int64                  `protobuf:"varint,4,opt,name=time_done,json=timeDone,proto3" json:"time_done,omitempty"`
	TimeDoneMsc    int64                  `protobuf:"varint,5,opt,name=time_done_msc,json=timeDoneMsc,proto3" json:"time_done_msc,omitempty"`
	TimeExpiration int64                  `protobuf:"varint,6,opt,name=time_expiration,json=timeExpiration,proto3" json:"time_expiration,omitempty"`
	Type           int32                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	TypeTime       int32                  `protobuf:"varint,8,opt,name=type_time,json=typeTime,proto3" json:"type_time,omitempty"`
	TypeFilling    int32                  `protobuf:"varint,9,opt,name=type_filling,json=typeFilling,proto3" json:"type_filling,omitempty"`
	State          OrderState             `protobuf:"varint,10,opt,name=state,proto3,enum=OrderState" json:"state,omitempty"`
	Magic          int32                  `protobuf:"varint,11,opt,name=magic,proto3" json:"magic,omitempty"`
	VolumeCurrent  float64                `protobuf:"fixed64,12,opt,name=volume_current,json=volumeCurrent,proto3" json:"volume_current,omitempty"`
	PriceOpen      float64                `protobuf:"fixed64,13,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	Sl             float64                `protobuf:"fixed64,14,opt,name=sl,proto3" json:"sl,omitempty"`
	Tp             float64                `protobuf:"fixed64,15,opt,name=tp,proto3" json:"tp,omitempty"`
	PriceCurrent   float64                `protobuf:"fixed64,16,opt,name=price_current,json=priceCurrent,proto3" json:"price_current,omitempty"`
	Symbol         string                 `protobuf:"bytes,17,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Comment        string                 `protobuf:"bytes,18,opt,name=comment,proto3" json:"comment,omitempty"`
	ExternalId     string                 `protobuf:"bytes,19,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TradeOrder) Reset() {
	*x = TradeOrder{}
	mi := &file_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrder) ProtoMessage() {}

func (x *TradeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrder.ProtoReflect.Descriptor instead.
func (*TradeOrder) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *TradeOrder) GetTicket() int64 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *TradeOrder) GetTimeSetup() int64 {
	if x != nil {
		return x.TimeSetup
	}
	return 0
}

func (x *TradeOrder) GetTimeSetupMsc() int64 {
	if x != nil {
		return x.TimeSetupMsc
	}
	return 0
}

func (x *TradeOrder) GetTimeDone() int64 {
	if x != nil {
		return x.TimeDone
	}
	return 0
}

func (x *TradeOrder) GetTimeDoneMsc() int64 {
	if x != nil {
		return x.TimeDoneMsc
	}
	return 0
}

func (x *TradeOrder) GetTimeExpiration() int64 {
	if x != nil {
		return x.TimeExpiration
	}
	return 0
}

func (x *TradeOrder) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradeOrder) GetTypeTime() int32 {
	if x != nil {
		return x.TypeTime
	}
	return 0
}

func (x *TradeOrder) GetTypeFilling() int32 {
	if x != nil {
		return x.TypeFilling
	}
	return 0
}

func (x *TradeOrder) GetState() OrderState {
	if x != nil {
		return x.State
	}
	return OrderState_ORDER_STATE_STARTED
}

func (x *TradeOrder) GetMagic() int32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *TradeOrder) GetVolumeCurrent() float64 {
	if x != nil {
		return x.VolumeCurrent
	}
	return 0
}

func (x *TradeOrder) GetPriceOpen() float64 {
	if x != nil {
		return x.PriceOpen
	}
	return 0
}

func (x *TradeOrder) GetSl() float64 {
	if x != nil {
		return x.Sl
	}
	return 0
}

func (x *TradeOrder) GetTp() float64 {
	if x != nil {
		return x.Tp
	}
	return 0
}

func (x *TradeOrder) GetPriceCurrent() float64 {
	if x != nil {
		return x.PriceCurrent
	}
	return 0
}

func (x *TradeOrder) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TradeOrder) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type TradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        TradeAction            `protobuf:"varint,1,opt,name=action,proto3,enum=TradeAction" json:"action,omitempty"`
	Magic         int32                  `protobuf:"varint,2,opt,name=magic,proto3" json:"magic,omitempty"`
	Order         *int64                 `protobuf:"varint,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	Symbol        *string                `protobuf:"bytes,4,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Volume        float64                `protobuf:"fixed64,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Price         *float64               `protobuf:"fixed64,6,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Stoplimit     *float64               `protobuf:"fixed64,7,opt,name=stoplimit,proto3,oneof" json:"stoplimit,omitempty"`
	Sl            *float64               `protobuf:"fixed64,8,opt,name=sl,proto3,oneof" json:"sl,omitempty"`
	Tp            *float64               `protobuf:"fixed64,9,opt,name=tp,proto3,oneof" json:"tp,omitempty"`
	Deviation     int32                  `protobuf:"varint,10,opt,name=deviation,proto3" json:"deviation,omitempty"`
	Type          OrderType              `protobuf:"varint,11,opt,name=type,proto3,enum=OrderType" json:"type,omitempty"`
	TypeFilling   OrderTypeFilling       `protobuf:"varint,12,opt,name=type_filling,json=typeFilling,proto3,enum=OrderTypeFilling" json:"type_filling,omitempty"`
	TypeTime      OrderTime              `protobuf:"varint,13,opt,name=type_time,json=typeTime,proto3,enum=OrderTime" json:"type_time,omitempty"`
	Expiration    *int64                 `protobuf:"varint,14,opt,name=expiration,proto3,oneof" json:"expiration,omitempty"`
	Comment       *string                `protobuf:"bytes,15,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
	Position      *int64                 `protobuf:"varint,16,opt,name=position,proto3,oneof" json:"position,omitempty"`
	PositionBy    *int64                 `protobuf:"varint,17,opt,name=position_by,json=positionBy,proto3,oneof" json:"position_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	mi := &file_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *TradeRequest) GetAction() TradeAction {
	if x != nil {
		return x.Action
	}
	return TradeAction_TRADE_ACTION_UNSPECIFIED
}

func (x *TradeRequest) GetMagic() int32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *TradeRequest) GetOrder() int64 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *TradeRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *TradeRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TradeRequest) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *TradeRequest) GetStoplimit() float64 {
	if x != nil && x.Stoplimit != nil {
		return *x.Stoplimit
	}
	return 0
}

func (x *TradeRequest) GetSl() float64 {
	if x != nil && x.Sl != nil {
		return *x.Sl
	}
	return 0
}

func (x *TradeRequest) GetTp() float64 {
	if x != nil && x.Tp != nil {
		return *x.Tp
	}
	return 0
}

func (x *TradeRequest) GetDeviation() int32 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

func (x *TradeRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_BUY
}

func (x *TradeRequest) GetTypeFilling() OrderTypeFilling {
	if x != nil {
		return x.TypeFilling
	}
	return OrderTypeFilling_ORDER_FILLING_FOK
}

func (x *TradeRequest) GetTypeTime() OrderTime {
	if x != nil {
		return x.TypeTime
	}
	return OrderTime_ORDER_TIME_GTC
}

func (x *TradeRequest) GetExpiration() int64 {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return 0
}

func (x *TradeRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *TradeRequest) GetPosition() int64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *TradeRequest) GetPositionBy() int64 {
	if x != nil && x.PositionBy != nil {
		return *x.PositionBy
	}
	return 0
}

type OrderCheckResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Retcode       TradeReturnCode        `protobuf:"varint,1,opt,name=retcode,proto3,enum=TradeReturnCode" json:"retcode,omitempty"`        // Operation return code
	Balance       float64                `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`                            // Balance value after execution
	Equity        float64                `protobuf:"fixed64,3,opt,name=equity,proto3" json:"equity,omitempty"`                              // Equity value after execution
	Profit        float64                `protobuf:"fixed64,4,opt,name=profit,proto3" json:"profit,omitempty"`                              // Floating profit value
	Margin        float64                `protobuf:"fixed64,5,opt,name=margin,proto3" json:"margin,omitempty"`                              // Margin requirements
	MarginFree    float64                `protobuf:"fixed64,6,opt,name=margin_free,json=marginFree,proto3" json:"margin_free,omitempty"`    // Free margin after execution
	MarginLevel   float64                `protobuf:"fixed64,7,opt,name=margin_level,json=marginLevel,proto3" json:"margin_level,omitempty"` // Margin level after execution
	Comment       string                 `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`                              // Comment on check result
	Request       *TradeRequest          `protobuf:"bytes,9,opt,name=request,proto3" json:"request,omitempty"`                              // Original trade request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCheckResult) Reset() {
	*x = OrderCheckResult{}
	mi := &file_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCheckResult) ProtoMessage() {}

func (x *OrderCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCheckResult.ProtoReflect.Descriptor instead.
func (*OrderCheckResult) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *OrderCheckResult) GetRetcode() TradeReturnCode {
	if x != nil {
		return x.Retcode
	}
	return TradeReturnCode_TRADE_RETCODE_UNSPECIFIED
}

func (x *OrderCheckResult) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *OrderCheckResult) GetEquity() float64 {
	if x != nil {
		return x.Equity
	}
	return 0
}

func (x *OrderCheckResult) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *OrderCheckResult) GetMargin() float64 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *OrderCheckResult) GetMarginFree() float64 {
	if x != nil {
		return x.MarginFree
	}
	return 0
}

func (x *OrderCheckResult) GetMarginLevel() float64 {
	if x != nil {
		return x.MarginLevel
	}
	return 0
}

func (x *OrderCheckResult) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *OrderCheckResult) GetRequest() *TradeRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type OrderSendResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ask             float64                `protobuf:"fixed64,1,opt,name=ask,proto3" json:"ask,omitempty"`                                                // The ask price
	Bid             float64                `protobuf:"fixed64,2,opt,name=bid,proto3" json:"bid,omitempty"`                                                // The bid price
	Comment         string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`                                          // Comment associated with the order
	Deal            int64                  `protobuf:"varint,4,opt,name=deal,proto3" json:"deal,omitempty"`                                               // Deal ID
	Order           int64                  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`                                             // Order ID
	Price           float64                `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`                                            // Price at which the order was executed
	Request         *TradeRequest          `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`                                          // Request ID
	RequestId       int64                  `protobuf:"varint,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                    // Request ID for tracking
	Retcode         TradeReturnCode        `protobuf:"varint,9,opt,name=retcode,proto3,enum=TradeReturnCode" json:"retcode,omitempty"`                    // Return code of the order operation
	RetcodeExternal int32                  `protobuf:"varint,10,opt,name=retcode_external,json=retcodeExternal,proto3" json:"retcode_external,omitempty"` // External return code
	Volume          float64                `protobuf:"fixed64,11,opt,name=volume,proto3" json:"volume,omitempty"`                                         // Volume of the order
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OrderSendResult) Reset() {
	*x = OrderSendResult{}
	mi := &file_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderSendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSendResult) ProtoMessage() {}

func (x *OrderSendResult) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSendResult.ProtoReflect.Descriptor instead.
func (*OrderSendResult) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *OrderSendResult) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *OrderSendResult) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *OrderSendResult) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *OrderSendResult) GetDeal() int64 {
	if x != nil {
		return x.Deal
	}
	return 0
}

func (x *OrderSendResult) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *OrderSendResult) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderSendResult) GetRequest() *TradeRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *OrderSendResult) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *OrderSendResult) GetRetcode() TradeReturnCode {
	if x != nil {
		return x.Retcode
	}
	return TradeReturnCode_TRADE_RETCODE_UNSPECIFIED
}

func (x *OrderSendResult) GetRetcodeExternal() int32 {
	if x != nil {
		return x.RetcodeExternal
	}
	return 0
}

func (x *OrderSendResult) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// Request and Response messages for OrderSend
type OrderSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeRequest  *TradeRequest          `protobuf:"bytes,1,opt,name=trade_request,json=tradeRequest,proto3" json:"trade_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderSendRequest) Reset() {
	*x = OrderSendRequest{}
	mi := &file_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSendRequest) ProtoMessage() {}

func (x *OrderSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSendRequest.ProtoReflect.Descriptor instead.
func (*OrderSendRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *OrderSendRequest) GetTradeRequest() *TradeRequest {
	if x != nil {
		return x.TradeRequest
	}
	return nil
}

type OrderSendResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderSendResult *OrderSendResult       `protobuf:"bytes,1,opt,name=order_send_result,json=orderSendResult,proto3" json:"order_send_result,omitempty"`
	Error           *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OrderSendResponse) Reset() {
	*x = OrderSendResponse{}
	mi := &file_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSendResponse) ProtoMessage() {}

func (x *OrderSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSendResponse.ProtoReflect.Descriptor instead.
func (*OrderSendResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *OrderSendResponse) GetOrderSendResult() *OrderSendResult {
	if x != nil {
		return x.OrderSendResult
	}
	return nil
}

func (x *OrderSendResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Request and Response messages for OrdersGet
type OrdersGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        *string                `protobuf:"bytes,1,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Group         *string                `protobuf:"bytes,2,opt,name=group,proto3,oneof" json:"group,omitempty"`
	Ticket        *int64                 `protobuf:"varint,3,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdersGetRequest) Reset() {
	*x = OrdersGetRequest{}
	mi := &file_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdersGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersGetRequest) ProtoMessage() {}

func (x *OrdersGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersGetRequest.ProtoReflect.Descriptor instead.
func (*OrdersGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

func (x *OrdersGetRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *OrdersGetRequest) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *OrdersGetRequest) GetTicket() int64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

type OrdersGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*TradeOrder          `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdersGetResponse) Reset() {
	*x = OrdersGetResponse{}
	mi := &file_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdersGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersGetResponse) ProtoMessage() {}

func (x *OrdersGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersGetResponse.ProtoReflect.Descriptor instead.
func (*OrdersGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

func (x *OrdersGetResponse) GetOrders() []*TradeOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *OrdersGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Request and Response messages for OrderCheck
type OrderCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeRequest  *TradeRequest          `protobuf:"bytes,1,opt,name=trade_request,json=tradeRequest,proto3" json:"trade_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCheckRequest) Reset() {
	*x = OrderCheckRequest{}
	mi := &file_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCheckRequest) ProtoMessage() {}

func (x *OrderCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCheckRequest.ProtoReflect.Descriptor instead.
func (*OrderCheckRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *OrderCheckRequest) GetTradeRequest() *TradeRequest {
	if x != nil {
		return x.TradeRequest
	}
	return nil
}

// Response for order check operation
type OrderCheckResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrderCheckResult *OrderCheckResult      `protobuf:"bytes,1,opt,name=order_check_result,json=orderCheckResult,proto3" json:"order_check_result,omitempty"`
	Error            *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OrderCheckResponse) Reset() {
	*x = OrderCheckResponse{}
	mi := &file_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCheckResponse) ProtoMessage() {}

func (x *OrderCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCheckResponse.ProtoReflect.Descriptor instead.
func (*OrderCheckResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (x *OrderCheckResponse) GetOrderCheckResult() *OrderCheckResult {
	if x != nil {
		return x.OrderCheckResult
	}
	return nil
}

func (x *OrderCheckResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type OrdersTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdersTotalResponse) Reset() {
	*x = OrdersTotalResponse{}
	mi := &file_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdersTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersTotalResponse) ProtoMessage() {}

func (x *OrdersTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersTotalResponse.ProtoReflect.Descriptor instead.
func (*OrdersTotalResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{31}
}

func (x *OrdersTotalResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OrdersTotalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type OrderCalcMarginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        OrderType              `protobuf:"varint,1,opt,name=action,proto3,enum=OrderType" json:"action,omitempty"` // Order type (ORDER_TYPE_BUY or ORDER_TYPE_SELL)
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                 // Symbol name
	Volume        float64                `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`               // Volume
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`                 // Open price
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCalcMarginRequest) Reset() {
	*x = OrderCalcMarginRequest{}
	mi := &file_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCalcMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalcMarginRequest) ProtoMessage() {}

func (x *OrderCalcMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalcMarginRequest.ProtoReflect.Descriptor instead.
func (*OrderCalcMarginRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{32}
}

func (x *OrderCalcMarginRequest) GetAction() OrderType {
	if x != nil {
		return x.Action
	}
	return OrderType_ORDER_TYPE_BUY
}

func (x *OrderCalcMarginRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderCalcMarginRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OrderCalcMarginRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// Response for margin calculation
type OrderCalcMarginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Margin        float64                `protobuf:"fixed64,1,opt,name=margin,proto3" json:"margin,omitempty"`   // Calculated margin value
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"` // Error information if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCalcMarginResponse) Reset() {
	*x = OrderCalcMarginResponse{}
	mi := &file_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCalcMarginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalcMarginResponse) ProtoMessage() {}

func (x *OrderCalcMarginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalcMarginResponse.ProtoReflect.Descriptor instead.
func (*OrderCalcMarginResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{33}
}

func (x *OrderCalcMarginResponse) GetMargin() float64 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *OrderCalcMarginResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Request for calculating profit
type OrderCalcProfitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        OrderType              `protobuf:"varint,1,opt,name=action,proto3,enum=OrderType" json:"action,omitempty"`             // Order type (ORDER_TYPE_BUY or ORDER_TYPE_SELL)
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                             // Symbol name
	Volume        float64                `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`                           // Volume
	PriceOpen     float64                `protobuf:"fixed64,4,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`    // Open price
	PriceClose    float64                `protobuf:"fixed64,5,opt,name=price_close,json=priceClose,proto3" json:"price_close,omitempty"` // Close price
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCalcProfitRequest) Reset() {
	*x = OrderCalcProfitRequest{}
	mi := &file_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCalcProfitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalcProfitRequest) ProtoMessage() {}

func (x *OrderCalcProfitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalcProfitRequest.ProtoReflect.Descriptor instead.
func (*OrderCalcProfitRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{34}
}

func (x *OrderCalcProfitRequest) GetAction() OrderType {
	if x != nil {
		return x.Action
	}
	return OrderType_ORDER_TYPE_BUY
}

func (x *OrderCalcProfitRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderCalcProfitRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OrderCalcProfitRequest) GetPriceOpen() float64 {
	if x != nil {
		return x.PriceOpen
	}
	return 0
}

func (x *OrderCalcProfitRequest) GetPriceClose() float64 {
	if x != nil {
		return x.PriceClose
	}
	return 0
}

// Response for profit calculation
type OrderCalcProfitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Profit        float64                `protobuf:"fixed64,1,opt,name=profit,proto3" json:"profit,omitempty"`   // Calculated profit value
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"` // Error information if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderCalcProfitResponse) Reset() {
	*x = OrderCalcProfitResponse{}
	mi := &file_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderCalcProfitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalcProfitResponse) ProtoMessage() {}

func (x *OrderCalcProfitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalcProfitResponse.ProtoReflect.Descriptor instead.
func (*OrderCalcProfitResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{35}
}

func (x *OrderCalcProfitResponse) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *OrderCalcProfitResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TradePosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        int64                  `protobuf:"varint,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type          PositionType           `protobuf:"varint,3,opt,name=type,proto3,enum=PositionType" json:"type,omitempty"`
	Magic         int32                  `protobuf:"varint,4,opt,name=magic,proto3" json:"magic,omitempty"`
	Identifier    int64                  `protobuf:"varint,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ExternalId    string                 `protobuf:"bytes,6,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Reason        PositionReason         `protobuf:"varint,7,opt,name=reason,proto3,enum=PositionReason" json:"reason,omitempty"`
	Volume        float64                `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	PriceOpen     float64                `protobuf:"fixed64,9,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	Sl            float64                `protobuf:"fixed64,10,opt,name=sl,proto3" json:"sl,omitempty"`
	Tp            float64                `protobuf:"fixed64,11,opt,name=tp,proto3" json:"tp,omitempty"`
	PriceCurrent  float64                `protobuf:"fixed64,12,opt,name=price_current,json=priceCurrent,proto3" json:"price_current,omitempty"`
	Swap          float64                `protobuf:"fixed64,13,opt,name=swap,proto3" json:"swap,omitempty"`
	Profit        float64                `protobuf:"fixed64,14,opt,name=profit,proto3" json:"profit,omitempty"`
	Comment       string                 `protobuf:"bytes,15,opt,name=comment,proto3" json:"comment,omitempty"`
	Time          int64                  `protobuf:"varint,16,opt,name=time,proto3" json:"time,omitempty"`
	TimeMsc       int64                  `protobuf:"varint,17,opt,name=time_msc,json=timeMsc,proto3" json:"time_msc,omitempty"`
	TimeUpdate    int64                  `protobuf:"varint,18,opt,name=time_update,json=timeUpdate,proto3" json:"time_update,omitempty"`
	TimeUpdateMsc int64                  `protobuf:"varint,19,opt,name=time_update_msc,json=timeUpdateMsc,proto3" json:"time_update_msc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradePosition) Reset() {
	*x = TradePosition{}
	mi := &file_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradePosition) ProtoMessage() {}

func (x *TradePosition) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradePosition.ProtoReflect.Descriptor instead.
func (*TradePosition) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{36}
}

func (x *TradePosition) GetTicket() int64 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *TradePosition) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradePosition) GetType() PositionType {
	if x != nil {
		return x.Type
	}
	return PositionType_POSITION_TYPE_BUY
}

func (x *TradePosition) GetMagic() int32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *TradePosition) GetIdentifier() int64 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *TradePosition) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *TradePosition) GetReason() PositionReason {
	if x != nil {
		return x.Reason
	}
	return PositionReason_POSITION_REASON_CLIENT
}

func (x *TradePosition) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TradePosition) GetPriceOpen() float64 {
	if x != nil {
		return x.PriceOpen
	}
	return 0
}

func (x *TradePosition) GetSl() float64 {
	if x != nil {
		return x.Sl
	}
	return 0
}

func (x *TradePosition) GetTp() float64 {
	if x != nil {
		return x.Tp
	}
	return 0
}

func (x *TradePosition) GetPriceCurrent() float64 {
	if x != nil {
		return x.PriceCurrent
	}
	return 0
}

func (x *TradePosition) GetSwap() float64 {
	if x != nil {
		return x.Swap
	}
	return 0
}

func (x *TradePosition) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *TradePosition) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TradePosition) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TradePosition) GetTimeMsc() int64 {
	if x != nil {
		return x.TimeMsc
	}
	return 0
}

func (x *TradePosition) GetTimeUpdate() int64 {
	if x != nil {
		return x.TimeUpdate
	}
	return 0
}

func (x *TradePosition) GetTimeUpdateMsc() int64 {
	if x != nil {
		return x.TimeUpdateMsc
	}
	return 0
}

type PositionsGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional filtering parameters
	Symbol        *string `protobuf:"bytes,1,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`  // Specific symbol name
	Group         *string `protobuf:"bytes,2,opt,name=group,proto3,oneof" json:"group,omitempty"`    // Group filter for symbols
	Ticket        *int64  `protobuf:"varint,3,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"` // Specific position ticket
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionsGetRequest) Reset() {
	*x = PositionsGetRequest{}
	mi := &file_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsGetRequest) ProtoMessage() {}

func (x *PositionsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsGetRequest.ProtoReflect.Descriptor instead.
func (*PositionsGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{37}
}

func (x *PositionsGetRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *PositionsGetRequest) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *PositionsGetRequest) GetTicket() int64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

type PositionsGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Positions     []*TradePosition       `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionsGetResponse) Reset() {
	*x = PositionsGetResponse{}
	mi := &file_messages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsGetResponse) ProtoMessage() {}

func (x *PositionsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsGetResponse.ProtoReflect.Descriptor instead.
func (*PositionsGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{38}
}

func (x *PositionsGetResponse) GetPositions() []*TradePosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *PositionsGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PositionsTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionsTotalResponse) Reset() {
	*x = PositionsTotalResponse{}
	mi := &file_messages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionsTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsTotalResponse) ProtoMessage() {}

func (x *PositionsTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsTotalResponse.ProtoReflect.Descriptor instead.
func (*PositionsTotalResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{39}
}

func (x *PositionsTotalResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PositionsTotalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// History Orders
type HistoryOrdersTotalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"` // Unix timestamp in seconds since 1970.01.01
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryOrdersTotalRequest) Reset() {
	*x = HistoryOrdersTotalRequest{}
	mi := &file_messages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryOrdersTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryOrdersTotalRequest) ProtoMessage() {}

func (x *HistoryOrdersTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryOrdersTotalRequest.ProtoReflect.Descriptor instead.
func (*HistoryOrdersTotalRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{40}
}

func (x *HistoryOrdersTotalRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *HistoryOrdersTotalRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type HistoryOrdersTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryOrdersTotalResponse) Reset() {
	*x = HistoryOrdersTotalResponse{}
	mi := &file_messages_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryOrdersTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryOrdersTotalResponse) ProtoMessage() {}

func (x *HistoryOrdersTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryOrdersTotalResponse.ProtoReflect.Descriptor instead.
func (*HistoryOrdersTotalResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{41}
}

func (x *HistoryOrdersTotalResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HistoryOrdersTotalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type HistoryOrdersGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3,oneof" json:"date_from,omitempty"` // Unix timestamp in seconds since 1970.01.01
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3,oneof" json:"date_to,omitempty"`
	Ticket        *uint64                `protobuf:"varint,3,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`     // Filter by order ticket
	Position      *uint64                `protobuf:"varint,4,opt,name=position,proto3,oneof" json:"position,omitempty"` // Filter by position ticket
	Group         *string                `protobuf:"bytes,5,opt,name=group,proto3,oneof" json:"group,omitempty"`        // Optional symbol group filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryOrdersGetRequest) Reset() {
	*x = HistoryOrdersGetRequest{}
	mi := &file_messages_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryOrdersGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryOrdersGetRequest) ProtoMessage() {}

func (x *HistoryOrdersGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryOrdersGetRequest.ProtoReflect.Descriptor instead.
func (*HistoryOrdersGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{42}
}

func (x *HistoryOrdersGetRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *HistoryOrdersGetRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *HistoryOrdersGetRequest) GetTicket() uint64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

func (x *HistoryOrdersGetRequest) GetPosition() uint64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *HistoryOrdersGetRequest) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

type HistoryOrdersGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*TradeOrder          `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryOrdersGetResponse) Reset() {
	*x = HistoryOrdersGetResponse{}
	mi := &file_messages_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryOrdersGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryOrdersGetResponse) ProtoMessage() {}

func (x *HistoryOrdersGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryOrdersGetResponse.ProtoReflect.Descriptor instead.
func (*HistoryOrdersGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{43}
}

func (x *HistoryOrdersGetResponse) GetOrders() []*TradeOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *HistoryOrdersGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// History Deals
type TradeDeal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        int64                  `protobuf:"varint,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type          DealType               `protobuf:"varint,3,opt,name=type,proto3,enum=DealType" json:"type,omitempty"`
	Entry         DealEntry              `protobuf:"varint,4,opt,name=entry,proto3,enum=DealEntry" json:"entry,omitempty"`
	Reason        DealReason             `protobuf:"varint,5,opt,name=reason,proto3,enum=DealReason" json:"reason,omitempty"`
	Volume        float64                `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Price         float64                `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	Commission    float64                `protobuf:"fixed64,8,opt,name=commission,proto3" json:"commission,omitempty"`
	Swap          float64                `protobuf:"fixed64,9,opt,name=swap,proto3" json:"swap,omitempty"`
	Profit        float64                `protobuf:"fixed64,10,opt,name=profit,proto3" json:"profit,omitempty"`
	Magic         int32                  `protobuf:"varint,11,opt,name=magic,proto3" json:"magic,omitempty"`
	Order         int64                  `protobuf:"varint,12,opt,name=order,proto3" json:"order,omitempty"`
	PositionId    int64                  `protobuf:"varint,13,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	Comment       string                 `protobuf:"bytes,14,opt,name=comment,proto3" json:"comment,omitempty"`
	ExternalId    string                 `protobuf:"bytes,15,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Fee           float64                `protobuf:"fixed64,16,opt,name=fee,proto3" json:"fee,omitempty"`
	Time          int64                  `protobuf:"varint,17,opt,name=time,proto3" json:"time,omitempty"`
	TimeMsc       int64                  `protobuf:"varint,18,opt,name=time_msc,json=timeMsc,proto3" json:"time_msc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeDeal) Reset() {
	*x = TradeDeal{}
	mi := &file_messages_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeDeal) ProtoMessage() {}

func (x *TradeDeal) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeDeal.ProtoReflect.Descriptor instead.
func (*TradeDeal) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{44}
}

func (x *TradeDeal) GetTicket() int64 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *TradeDeal) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeDeal) GetType() DealType {
	if x != nil {
		return x.Type
	}
	return DealType_DEAL_TYPE_BUY
}

func (x *TradeDeal) GetEntry() DealEntry {
	if x != nil {
		return x.Entry
	}
	return DealEntry_DEAL_ENTRY_IN
}

func (x *TradeDeal) GetReason() DealReason {
	if x != nil {
		return x.Reason
	}
	return DealReason_DEAL_REASON_CLIENT
}

func (x *TradeDeal) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TradeDeal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TradeDeal) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *TradeDeal) GetSwap() float64 {
	if x != nil {
		return x.Swap
	}
	return 0
}

func (x *TradeDeal) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *TradeDeal) GetMagic() int32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *TradeDeal) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *TradeDeal) GetPositionId() int64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *TradeDeal) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TradeDeal) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *TradeDeal) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TradeDeal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TradeDeal) GetTimeMsc() int64 {
	if x != nil {
		return x.TimeMsc
	}
	return 0
}

type HistoryDealsTotalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"` // Unix timestamp in seconds since 1970.01.01
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryDealsTotalRequest) Reset() {
	*x = HistoryDealsTotalRequest{}
	mi := &file_messages_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryDealsTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDealsTotalRequest) ProtoMessage() {}

func (x *HistoryDealsTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDealsTotalRequest.ProtoReflect.Descriptor instead.
func (*HistoryDealsTotalRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{45}
}

func (x *HistoryDealsTotalRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *HistoryDealsTotalRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type HistoryDealsTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryDealsTotalResponse) Reset() {
	*x = HistoryDealsTotalResponse{}
	mi := &file_messages_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryDealsTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDealsTotalResponse) ProtoMessage() {}

func (x *HistoryDealsTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDealsTotalResponse.ProtoReflect.Descriptor instead.
func (*HistoryDealsTotalResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{46}
}

func (x *HistoryDealsTotalResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HistoryDealsTotalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type HistoryDealsGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3,oneof" json:"date_from,omitempty"` // Unix timestamp in seconds since 1970.01.01
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3,oneof" json:"date_to,omitempty"`
	Ticket        *uint64                `protobuf:"varint,3,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`     // Filter by order ticket
	Position      *uint64                `protobuf:"varint,4,opt,name=position,proto3,oneof" json:"position,omitempty"` // Filter by position ticket
	Group         *string                `protobuf:"bytes,5,opt,name=group,proto3,oneof" json:"group,omitempty"`        // Optional symbol group filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryDealsGetRequest) Reset() {
	*x = HistoryDealsGetRequest{}
	mi := &file_messages_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryDealsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDealsGetRequest) ProtoMessage() {}

func (x *HistoryDealsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDealsGetRequest.ProtoReflect.Descriptor instead.
func (*HistoryDealsGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{47}
}

func (x *HistoryDealsGetRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *HistoryDealsGetRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *HistoryDealsGetRequest) GetTicket() uint64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

func (x *HistoryDealsGetRequest) GetPosition() uint64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *HistoryDealsGetRequest) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

type HistoryDealsGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deals         []*TradeDeal           `protobuf:"bytes,1,rep,name=deals,proto3" json:"deals,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryDealsGetResponse) Reset() {
	*x = HistoryDealsGetResponse{}
	mi := &file_messages_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryDealsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDealsGetResponse) ProtoMessage() {}

func (x *HistoryDealsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDealsGetResponse.ProtoReflect.Descriptor instead.
func (*HistoryDealsGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{48}
}

func (x *HistoryDealsGetResponse) GetDeals() []*TradeDeal {
	if x != nil {
		return x.Deals
	}
	return nil
}

func (x *HistoryDealsGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Last Error
type LastErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *Error                 `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastErrorResponse) Reset() {
	*x = LastErrorResponse{}
	mi := &file_messages_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastErrorResponse) ProtoMessage() {}

func (x *LastErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastErrorResponse.ProtoReflect.Descriptor instead.
func (*LastErrorResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{49}
}

func (x *LastErrorResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Market
type BookInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float64                `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Type          BookType               `protobuf:"varint,2,opt,name=type,proto3,enum=BookType" json:"type,omitempty"` // 0 = buy, 1 = sell, etc.
	Volume        float64                `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	VolumeDbl     float64                `protobuf:"fixed64,4,opt,name=volume_dbl,json=volumeDbl,proto3" json:"volume_dbl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookInfo) Reset() {
	*x = BookInfo{}
	mi := &file_messages_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookInfo) ProtoMessage() {}

func (x *BookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookInfo.ProtoReflect.Descriptor instead.
func (*BookInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{50}
}

func (x *BookInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BookInfo) GetType() BookType {
	if x != nil {
		return x.Type
	}
	return BookType_BOOK_TYPE_UNSPECIFIED
}

func (x *BookInfo) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *BookInfo) GetVolumeDbl() float64 {
	if x != nil {
		return x.VolumeDbl
	}
	return 0
}

type MarketBookAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookAddRequest) Reset() {
	*x = MarketBookAddRequest{}
	mi := &file_messages_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookAddRequest) ProtoMessage() {}

func (x *MarketBookAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookAddRequest.ProtoReflect.Descriptor instead.
func (*MarketBookAddRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{51}
}

func (x *MarketBookAddRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type MarketBookAddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookAddResponse) Reset() {
	*x = MarketBookAddResponse{}
	mi := &file_messages_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookAddResponse) ProtoMessage() {}

func (x *MarketBookAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookAddResponse.ProtoReflect.Descriptor instead.
func (*MarketBookAddResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{52}
}

func (x *MarketBookAddResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarketBookAddResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type MarketBookGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookGetRequest) Reset() {
	*x = MarketBookGetRequest{}
	mi := &file_messages_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookGetRequest) ProtoMessage() {}

func (x *MarketBookGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookGetRequest.ProtoReflect.Descriptor instead.
func (*MarketBookGetRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{53}
}

func (x *MarketBookGetRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type MarketBookGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BookInfos     []*BookInfo            `protobuf:"bytes,1,rep,name=book_infos,json=bookInfos,proto3" json:"book_infos,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookGetResponse) Reset() {
	*x = MarketBookGetResponse{}
	mi := &file_messages_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookGetResponse) ProtoMessage() {}

func (x *MarketBookGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookGetResponse.ProtoReflect.Descriptor instead.
func (*MarketBookGetResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{54}
}

func (x *MarketBookGetResponse) GetBookInfos() []*BookInfo {
	if x != nil {
		return x.BookInfos
	}
	return nil
}

func (x *MarketBookGetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type MarketBookReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookReleaseRequest) Reset() {
	*x = MarketBookReleaseRequest{}
	mi := &file_messages_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookReleaseRequest) ProtoMessage() {}

func (x *MarketBookReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookReleaseRequest.ProtoReflect.Descriptor instead.
func (*MarketBookReleaseRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{55}
}

func (x *MarketBookReleaseRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type MarketBookReleaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBookReleaseResponse) Reset() {
	*x = MarketBookReleaseResponse{}
	mi := &file_messages_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBookReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBookReleaseResponse) ProtoMessage() {}

func (x *MarketBookReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBookReleaseResponse.ProtoReflect.Descriptor instead.
func (*MarketBookReleaseResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{56}
}

func (x *MarketBookReleaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarketBookReleaseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type InitializeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Server        string                 `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Login         int64                  `protobuf:"varint,3,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_messages_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{57}
}

func (x *InitializeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InitializeRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *InitializeRequest) GetLogin() int64 {
	if x != nil {
		return x.Login
	}
	return 0
}

func (x *InitializeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type InitializeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_messages_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{58}
}

func (x *InitializeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitializeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         int64                  `protobuf:"varint,1,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Server        string                 `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_messages_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{59}
}

func (x *LoginRequest) GetLogin() int64 {
	if x != nil {
		return x.Login
	}
	return 0
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_messages_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{60}
}

func (x *LoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShutdownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	mi := &file_messages_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{61}
}

func (x *ShutdownResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShutdownResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Version struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TerminalVersion int32                  `protobuf:"varint,1,opt,name=terminal_version,json=terminalVersion,proto3" json:"terminal_version,omitempty"`
	Build           int32                  `protobuf:"varint,2,opt,name=build,proto3" json:"build,omitempty"`
	ReleaseDate     string                 `protobuf:"bytes,3,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_messages_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{62}
}

func (x *Version) GetTerminalVersion() int32 {
	if x != nil {
		return x.TerminalVersion
	}
	return 0
}

func (x *Version) GetBuild() int32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *Version) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

type VersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *Version               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_messages_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{63}
}

func (x *VersionResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *VersionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AccountInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Assets            float64                `protobuf:"fixed64,1,opt,name=assets,proto3" json:"assets,omitempty"`
	Balance           float64                `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	CommissionBlocked float64                `protobuf:"fixed64,3,opt,name=commission_blocked,json=commissionBlocked,proto3" json:"commission_blocked,omitempty"`
	Company           string                 `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Credit            float64                `protobuf:"fixed64,5,opt,name=credit,proto3" json:"credit,omitempty"`
	Currency          string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrencyDigits    int32                  `protobuf:"varint,7,opt,name=currency_digits,json=currencyDigits,proto3" json:"currency_digits,omitempty"`
	Equity            float64                `protobuf:"fixed64,8,opt,name=equity,proto3" json:"equity,omitempty"`
	FifoClose         int32                  `protobuf:"varint,9,opt,name=fifo_close,json=fifoClose,proto3" json:"fifo_close,omitempty"`
	Leverage          int32                  `protobuf:"varint,10,opt,name=leverage,proto3" json:"leverage,omitempty"`
	Liabilities       float64                `protobuf:"fixed64,11,opt,name=liabilities,proto3" json:"liabilities,omitempty"`
	LimitOrders       int32                  `protobuf:"varint,12,opt,name=limit_orders,json=limitOrders,proto3" json:"limit_orders,omitempty"`
	Login             uint64                 `protobuf:"varint,13,opt,name=login,proto3" json:"login,omitempty"`
	Margin            float64                `protobuf:"fixed64,14,opt,name=margin,proto3" json:"margin,omitempty"`
	MarginFree        float64                `protobuf:"fixed64,15,opt,name=margin_free,json=marginFree,proto3" json:"margin_free,omitempty"`
	MarginInitial     float64                `protobuf:"fixed64,16,opt,name=margin_initial,json=marginInitial,proto3" json:"margin_initial,omitempty"`
	MarginLevel       float64                `protobuf:"fixed64,17,opt,name=margin_level,json=marginLevel,proto3" json:"margin_level,omitempty"`
	MarginMaintenance float64                `protobuf:"fixed64,18,opt,name=margin_maintenance,json=marginMaintenance,proto3" json:"margin_maintenance,omitempty"`
	MarginMode        AccountMarginMode      `protobuf:"varint,19,opt,name=margin_mode,json=marginMode,proto3,enum=AccountMarginMode" json:"margin_mode,omitempty"`
	MarginSoCall      float64                `protobuf:"fixed64,20,opt,name=margin_so_call,json=marginSoCall,proto3" json:"margin_so_call,omitempty"`
	MarginSoMode      int32                  `protobuf:"varint,21,opt,name=margin_so_mode,json=marginSoMode,proto3" json:"margin_so_mode,omitempty"`
	MarginSoSo        float64                `protobuf:"fixed64,22,opt,name=margin_so_so,json=marginSoSo,proto3" json:"margin_so_so,omitempty"`
	Name              string                 `protobuf:"bytes,23,opt,name=name,proto3" json:"name,omitempty"`
	Profit            float64                `protobuf:"fixed64,24,opt,name=profit,proto3" json:"profit,omitempty"`
	Server            string                 `protobuf:"bytes,25,opt,name=server,proto3" json:"server,omitempty"`
	TradeAllowed      bool                   `protobuf:"varint,26,opt,name=trade_allowed,json=tradeAllowed,proto3" json:"trade_allowed,omitempty"`
	TradeExpert       bool                   `protobuf:"varint,27,opt,name=trade_expert,json=tradeExpert,proto3" json:"trade_expert,omitempty"`
	TradeMode         AccountTradeMode       `protobuf:"varint,28,opt,name=trade_mode,json=tradeMode,proto3,enum=AccountTradeMode" json:"trade_mode,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	mi := &file_messages_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{64}
}

func (x *AccountInfo) GetAssets() float64 {
	if x != nil {
		return x.Assets
	}
	return 0
}

func (x *AccountInfo) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AccountInfo) GetCommissionBlocked() float64 {
	if x != nil {
		return x.CommissionBlocked
	}
	return 0
}

func (x *AccountInfo) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *AccountInfo) GetCredit() float64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *AccountInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountInfo) GetCurrencyDigits() int32 {
	if x != nil {
		return x.CurrencyDigits
	}
	return 0
}

func (x *AccountInfo) GetEquity() float64 {
	if x != nil {
		return x.Equity
	}
	return 0
}

func (x *AccountInfo) GetFifoClose() int32 {
	if x != nil {
		return x.FifoClose
	}
	return 0
}

func (x *AccountInfo) GetLeverage() int32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

func (x *AccountInfo) GetLiabilities() float64 {
	if x != nil {
		return x.Liabilities
	}
	return 0
}

func (x *AccountInfo) GetLimitOrders() int32 {
	if x != nil {
		return x.LimitOrders
	}
	return 0
}

func (x *AccountInfo) GetLogin() uint64 {
	if x != nil {
		return x.Login
	}
	return 0
}

func (x *AccountInfo) GetMargin() float64 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *AccountInfo) GetMarginFree() float64 {
	if x != nil {
		return x.MarginFree
	}
	return 0
}

func (x *AccountInfo) GetMarginInitial() float64 {
	if x != nil {
		return x.MarginInitial
	}
	return 0
}

func (x *AccountInfo) GetMarginLevel() float64 {
	if x != nil {
		return x.MarginLevel
	}
	return 0
}

func (x *AccountInfo) GetMarginMaintenance() float64 {
	if x != nil {
		return x.MarginMaintenance
	}
	return 0
}

func (x *AccountInfo) GetMarginMode() AccountMarginMode {
	if x != nil {
		return x.MarginMode
	}
	return AccountMarginMode_ACCOUNT_MARGIN_MODE_RETAIL_NETTING
}

func (x *AccountInfo) GetMarginSoCall() float64 {
	if x != nil {
		return x.MarginSoCall
	}
	return 0
}

func (x *AccountInfo) GetMarginSoMode() int32 {
	if x != nil {
		return x.MarginSoMode
	}
	return 0
}

func (x *AccountInfo) GetMarginSoSo() float64 {
	if x != nil {
		return x.MarginSoSo
	}
	return 0
}

func (x *AccountInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountInfo) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *AccountInfo) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *AccountInfo) GetTradeAllowed() bool {
	if x != nil {
		return x.TradeAllowed
	}
	return false
}

func (x *AccountInfo) GetTradeExpert() bool {
	if x != nil {
		return x.TradeExpert
	}
	return false
}

func (x *AccountInfo) GetTradeMode() AccountTradeMode {
	if x != nil {
		return x.TradeMode
	}
	return AccountTradeMode_ACCOUNT_TRADE_MODE_DEMO
}

type TerminalInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Build                int32                  `protobuf:"varint,1,opt,name=build,proto3" json:"build,omitempty"`
	Codepage             int32                  `protobuf:"varint,2,opt,name=codepage,proto3" json:"codepage,omitempty"`
	CommondataPath       string                 `protobuf:"bytes,3,opt,name=commondata_path,json=commondataPath,proto3" json:"commondata_path,omitempty"`
	CommunityAccount     bool                   `protobuf:"varint,4,opt,name=community_account,json=communityAccount,proto3" json:"community_account,omitempty"`
	CommunityBalance     float64                `protobuf:"fixed64,5,opt,name=community_balance,json=communityBalance,proto3" json:"community_balance,omitempty"`
	CommunityConnection  bool                   `protobuf:"varint,6,opt,name=community_connection,json=communityConnection,proto3" json:"community_connection,omitempty"`
	Company              string                 `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Connected            bool                   `protobuf:"varint,8,opt,name=connected,proto3" json:"connected,omitempty"`
	DataPath             string                 `protobuf:"bytes,9,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	DllsAllowed          bool                   `protobuf:"varint,10,opt,name=dlls_allowed,json=dllsAllowed,proto3" json:"dlls_allowed,omitempty"`
	EmailEnabled         bool                   `protobuf:"varint,11,opt,name=email_enabled,json=emailEnabled,proto3" json:"email_enabled,omitempty"`
	FtpEnabled           bool                   `protobuf:"varint,12,opt,name=ftp_enabled,json=ftpEnabled,proto3" json:"ftp_enabled,omitempty"`
	Language             string                 `protobuf:"bytes,13,opt,name=language,proto3" json:"language,omitempty"`
	Maxbars              int32                  `protobuf:"varint,14,opt,name=maxbars,proto3" json:"maxbars,omitempty"`
	Mqid                 bool                   `protobuf:"varint,15,opt,name=mqid,proto3" json:"mqid,omitempty"`
	Name                 string                 `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	NotificationsEnabled bool                   `protobuf:"varint,17,opt,name=notifications_enabled,json=notificationsEnabled,proto3" json:"notifications_enabled,omitempty"`
	Path                 string                 `protobuf:"bytes,18,opt,name=path,proto3" json:"path,omitempty"`
	PingLast             int32                  `protobuf:"varint,19,opt,name=ping_last,json=pingLast,proto3" json:"ping_last,omitempty"`
	Retransmission       float32                `protobuf:"fixed32,20,opt,name=retransmission,proto3" json:"retransmission,omitempty"`
	TradeapiDisabled     bool                   `protobuf:"varint,21,opt,name=tradeapi_disabled,json=tradeapiDisabled,proto3" json:"tradeapi_disabled,omitempty"`
	TradeAllowed         bool                   `protobuf:"varint,22,opt,name=trade_allowed,json=tradeAllowed,proto3" json:"trade_allowed,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TerminalInfo) Reset() {
	*x = TerminalInfo{}
	mi := &file_messages_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalInfo) ProtoMessage() {}

func (x *TerminalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalInfo.ProtoReflect.Descriptor instead.
func (*TerminalInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{65}
}

func (x *TerminalInfo) GetBuild() int32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *TerminalInfo) GetCodepage() int32 {
	if x != nil {
		return x.Codepage
	}
	return 0
}

func (x *TerminalInfo) GetCommondataPath() string {
	if x != nil {
		return x.CommondataPath
	}
	return ""
}

func (x *TerminalInfo) GetCommunityAccount() bool {
	if x != nil {
		return x.CommunityAccount
	}
	return false
}

func (x *TerminalInfo) GetCommunityBalance() float64 {
	if x != nil {
		return x.CommunityBalance
	}
	return 0
}

func (x *TerminalInfo) GetCommunityConnection() bool {
	if x != nil {
		return x.CommunityConnection
	}
	return false
}

func (x *TerminalInfo) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *TerminalInfo) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *TerminalInfo) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *TerminalInfo) GetDllsAllowed() bool {
	if x != nil {
		return x.DllsAllowed
	}
	return false
}

func (x *TerminalInfo) GetEmailEnabled() bool {
	if x != nil {
		return x.EmailEnabled
	}
	return false
}

func (x *TerminalInfo) GetFtpEnabled() bool {
	if x != nil {
		return x.FtpEnabled
	}
	return false
}

func (x *TerminalInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TerminalInfo) GetMaxbars() int32 {
	if x != nil {
		return x.Maxbars
	}
	return 0
}

func (x *TerminalInfo) GetMqid() bool {
	if x != nil {
		return x.Mqid
	}
	return false
}

func (x *TerminalInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TerminalInfo) GetNotificationsEnabled() bool {
	if x != nil {
		return x.NotificationsEnabled
	}
	return false
}

func (x *TerminalInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TerminalInfo) GetPingLast() int32 {
	if x != nil {
		return x.PingLast
	}
	return 0
}

func (x *TerminalInfo) GetRetransmission() float32 {
	if x != nil {
		return x.Retransmission
	}
	return 0
}

func (x *TerminalInfo) GetTradeapiDisabled() bool {
	if x != nil {
		return x.TradeapiDisabled
	}
	return false
}

func (x *TerminalInfo) GetTradeAllowed() bool {
	if x != nil {
		return x.TradeAllowed
	}
	return false
}

type AccountInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountInfo   *AccountInfo           `protobuf:"bytes,1,opt,name=account_info,json=accountInfo,proto3" json:"account_info,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountInfoResponse) Reset() {
	*x = AccountInfoResponse{}
	mi := &file_messages_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfoResponse) ProtoMessage() {}

func (x *AccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfoResponse.ProtoReflect.Descriptor instead.
func (*AccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{66}
}

func (x *AccountInfoResponse) GetAccountInfo() *AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *AccountInfoResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TerminalInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TerminalInfo  *TerminalInfo          `protobuf:"bytes,1,opt,name=terminal_info,json=terminalInfo,proto3" json:"terminal_info,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalInfoResponse) Reset() {
	*x = TerminalInfoResponse{}
	mi := &file_messages_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalInfoResponse) ProtoMessage() {}

func (x *TerminalInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalInfoResponse.ProtoReflect.Descriptor instead.
func (*TerminalInfoResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{67}
}

func (x *TerminalInfoResponse) GetTerminalInfo() *TerminalInfo {
	if x != nil {
		return x.TerminalInfo
	}
	return nil
}

func (x *TerminalInfoResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`         // Required: symbol to close
	Comment       *string                `protobuf:"bytes,2,opt,name=comment,proto3,oneof" json:"comment,omitempty"` // Optional: comment
	Ticket        *int64                 `protobuf:"varint,3,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`  // Optional: specific ticket to close
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	mi := &file_messages_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{68}
}

func (x *CloseRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CloseRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *CloseRequest) GetTicket() int64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

type CloseResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderSendResult *OrderSendResult       `protobuf:"bytes,1,opt,name=order_send_result,json=orderSendResult,proto3" json:"order_send_result,omitempty"`
	Error           *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	mi := &file_messages_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{69}
}

func (x *CloseResponse) GetOrderSendResult() *OrderSendResult {
	if x != nil {
		return x.OrderSendResult
	}
	return nil
}

func (x *CloseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BuyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`         // Required: symbol to buy
	Volume        float64                `protobuf:"fixed64,2,opt,name=volume,proto3" json:"volume,omitempty"`       // Required: volume to buy
	Price         *float64               `protobuf:"fixed64,3,opt,name=price,proto3,oneof" json:"price,omitempty"`   // Optional: price (0 = market)
	Comment       *string                `protobuf:"bytes,4,opt,name=comment,proto3,oneof" json:"comment,omitempty"` // Optional: comment
	Ticket        *int64                 `protobuf:"varint,5,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`  // Optional: ticket to modify
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyRequest) Reset() {
	*x = BuyRequest{}
	mi := &file_messages_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRequest) ProtoMessage() {}

func (x *BuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRequest.ProtoReflect.Descriptor instead.
func (*BuyRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{70}
}

func (x *BuyRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BuyRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *BuyRequest) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *BuyRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *BuyRequest) GetTicket() int64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

type BuyResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderSendResult *OrderSendResult       `protobuf:"bytes,1,opt,name=order_send_result,json=orderSendResult,proto3" json:"order_send_result,omitempty"`
	Error           *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	mi := &file_messages_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{71}
}

func (x *BuyResponse) GetOrderSendResult() *OrderSendResult {
	if x != nil {
		return x.OrderSendResult
	}
	return nil
}

func (x *BuyResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`         // Required: symbol to sell
	Volume        float64                `protobuf:"fixed64,2,opt,name=volume,proto3" json:"volume,omitempty"`       // Required: volume to sell
	Price         *float64               `protobuf:"fixed64,3,opt,name=price,proto3,oneof" json:"price,omitempty"`   // Optional: price (0 = market)
	Comment       *string                `protobuf:"bytes,4,opt,name=comment,proto3,oneof" json:"comment,omitempty"` // Optional: comment
	Ticket        *int64                 `protobuf:"varint,5,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`  // Optional: ticket to modify
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SellRequest) Reset() {
	*x = SellRequest{}
	mi := &file_messages_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellRequest) ProtoMessage() {}

func (x *SellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellRequest.ProtoReflect.Descriptor instead.
func (*SellRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{72}
}

func (x *SellRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SellRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SellRequest) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *SellRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *SellRequest) GetTicket() int64 {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return 0
}

type SellResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderSendResult *OrderSendResult       `protobuf:"bytes,1,opt,name=order_send_result,json=orderSendResult,proto3" json:"order_send_result,omitempty"`
	Error           *Error                 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SellResponse) Reset() {
	*x = SellResponse{}
	mi := &file_messages_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellResponse) ProtoMessage() {}

func (x *SellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellResponse.ProtoReflect.Descriptor instead.
func (*SellResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{73}
}

func (x *SellResponse) GetOrderSendResult() *OrderSendResult {
	if x != nil {
		return x.OrderSendResult
	}
	return nil
}

func (x *SellResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\venums.proto\"5\n" +
	"\x05Error\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc5\x01\n" +
	"\x05Rates\x12\x12\n" +
	"\x04time\x18\x01 \x03(\x03R\x04time\x12\x12\n" +
	"\x04high\x18\x02 \x03(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x03 \x03(\x01R\x03low\x12\x12\n" +
	"\x04open\x18\x04 \x03(\x01R\x04open\x12\x14\n" +
	"\x05close\x18\x05 \x03(\x01R\x05close\x12\x1f\n" +
	"\vreal_volume\x18\x06 \x03(\x01R\n" +
	"realVolume\x12\x1f\n" +
	"\vtick_volume\x18\a \x03(\x01R\n" +
	"tickVolume\x12\x16\n" +
	"\x06spread\x18\b \x03(\x01R\x06spread\"\xc8\x01\n" +
	"\x05Ticks\x12\x12\n" +
	"\x04time\x18\x01 \x03(\x03R\x04time\x12\x10\n" +
	"\x03bid\x18\x02 \x03(\x01R\x03bid\x12\x10\n" +
	"\x03ask\x18\x03 \x03(\x01R\x03ask\x12\x12\n" +
	"\x04last\x18\x04 \x03(\x01R\x04last\x12\x16\n" +
	"\x06volume\x18\x05 \x03(\x04R\x06volume\x12\x19\n" +
	"\btime_msc\x18\x06 \x03(\x03R\atimeMsc\x12\x1f\n" +
	"\x05flags\x18\a \x03(\x0e2\t.TickFlagR\x05flags\x12\x1f\n" +
	"\vvolume_real\x18\b \x03(\x01R\n" +
	"volumeReal\"\xbc\x01\n" +
	"\x04Tick\x12\x12\n" +
	"\x04time\x18\x01 \x01(\x03R\x04time\x12\x10\n" +
	"\x03bid\x18\x02 \x01(\x01R\x03bid\x12\x10\n" +
	"\x03ask\x18\x03 \x01(\x01R\x03ask\x12\x12\n" +
	"\x04last\x18\x04 \x01(\x01R\x04last\x12\x16\n" +
	"\x06volume\x18\x05 \x01(\x04R\x06volume\x12\x19\n" +
	"\btime_msc\x18\x06 \x01(\x03R\atimeMsc\x12\x14\n" +
	"\x05flags\x18\a \x01(\rR\x05flags\x12\x1f\n" +
	"\vvolume_real\x18\b \x01(\x01R\n" +
	"volumeReal\"\xc7\x01\n" +
	"\x15CopyRatesRangeRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12(\n" +
	"\ttimeframe\x18\x02 \x01(\x0e2\n" +
	".TimeFrameR\ttimeframe\x127\n" +
	"\tdate_from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\"\xa7\x01\n" +
	"\x14CopyRatesFromRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12(\n" +
	"\ttimeframe\x18\x02 \x01(\x0e2\n" +
	".TimeFrameR\ttimeframe\x127\n" +
	"\tdate_from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\"\x8e\x01\n" +
	"\x17CopyRatesFromPosRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12(\n" +
	"\ttimeframe\x18\x02 \x01(\x0e2\n" +
	".TimeFrameR\ttimeframe\x12\x1b\n" +
	"\tstart_pos\x18\x03 \x01(\x03R\bstartPos\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\"\x93\x01\n" +
	"\x14CopyTicksFromRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x127\n" +
	"\tdate_from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x05R\x05flags\"\xb3\x01\n" +
	"\x15CopyTicksRangeRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x127\n" +
	"\tdate_from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x05R\x05flags\"^\n" +
	"\x11CopyRatesResponse\x12\x1c\n" +
	"\x05rates\x18\x01 \x01(\v2\x06.RatesR\x05rates\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"^\n" +
	"\x11CopyTicksResponse\x12\x1c\n" +
	"\x05ticks\x18\x01 \x01(\v2\x06.TicksR\x05ticks\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"e\n" +
	"\x11SymbolsGetRequest\x12\x19\n" +
	"\x05group\x18\x01 \x01(\tH\x00R\x05group\x88\x01\x01\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x01R\x05error\x88\x01\x01B\b\n" +
	"\x06_groupB\b\n" +
	"\x06_error\"h\n" +
	"\x12SymbolsGetResponse\x12%\n" +
	"\asymbols\x18\x01 \x03(\v2\v.SymbolInfoR\asymbols\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xad\x1c\n" +
	"\n" +
	"SymbolInfo\x12\x16\n" +
	"\x06custom\x18\x01 \x01(\bR\x06custom\x12\x16\n" +
	"\x06select\x18\x02 \x01(\bR\x06select\x12\x18\n" +
	"\avisible\x18\x03 \x01(\bR\avisible\x12!\n" +
	"\fspread_float\x18\x04 \x01(\bR\vspreadFloat\x121\n" +
	"\x15margin_hedged_use_leg\x18\x05 \x01(\bR\x12marginHedgedUseLeg\x12/\n" +
	"\n" +
	"chart_mode\x18\n" +
	" \x01(\x0e2\x10.SymbolChartModeR\tchartMode\x12#\n" +
	"\rsession_deals\x18\v \x01(\x05R\fsessionDeals\x12,\n" +
	"\x12session_buy_orders\x18\f \x01(\x05R\x10sessionBuyOrders\x12.\n" +
	"\x13session_sell_orders\x18\r \x01(\x05R\x11sessionSellOrders\x12\x16\n" +
	"\x06volume\x18\x0e \x01(\x05R\x06volume\x12\x1e\n" +
	"\n" +
	"volumehigh\x18\x0f \x01(\x05R\n" +
	"volumehigh\x12\x1c\n" +
	"\tvolumelow\x18\x10 \x01(\x05R\tvolumelow\x12\x16\n" +
	"\x06digits\x18\x11 \x01(\x05R\x06digits\x12\x16\n" +
	"\x06spread\x18\x12 \x01(\x05R\x06spread\x12'\n" +
	"\x0fticks_bookdepth\x18\x13 \x01(\x05R\x0eticksBookdepth\x127\n" +
	"\x0ftrade_calc_mode\x18\x14 \x01(\x0e2\x0f.SymbolCalcModeR\rtradeCalcMode\x12/\n" +
	"\n" +
	"trade_mode\x18\x15 \x01(\x0e2\x10.SymbolTradeModeR\ttradeMode\x12*\n" +
	"\x11trade_stops_level\x18\x16 \x01(\x05R\x0ftradeStopsLevel\x12,\n" +
	"\x12trade_freeze_level\x18\x17 \x01(\x05R\x10tradeFreezeLevel\x12#\n" +
	"\rtrade_exemode\x18\x18 \x01(\x05R\ftradeExemode\x12,\n" +
	"\tswap_mode\x18\x19 \x01(\x0e2\x0f.SymbolSwapModeR\bswapMode\x12-\n" +
	"\x12swap_rollover3days\x18\x1a \x01(\x05R\x11swapRollover3days\x12>\n" +
	"\x0fexpiration_mode\x18\x1b \x01(\x0e2\x15.SymbolTradeExecutionR\x0eexpirationMode\x12!\n" +
	"\ffilling_mode\x18\x1c \x01(\x05R\vfillingMode\x12\x1d\n" +
	"\n" +
	"order_mode\x18\x1d \x01(\x05R\torderMode\x129\n" +
	"\x0eorder_gtc_mode\x18\x1e \x01(\x0e2\x13.SymbolOrderGTCModeR\forderGtcMode\x122\n" +
	"\voption_mode\x18\x1f \x01(\x0e2\x11.SymbolOptionModeR\n" +
	"optionMode\x125\n" +
	"\foption_right\x18  \x01(\x0e2\x12.SymbolOptionRightR\voptionRight\x12\x12\n" +
	"\x04time\x18( \x01(\x03R\x04time\x12\x1d\n" +
	"\n" +
	"start_time\x18) \x01(\x03R\tstartTime\x12'\n" +
	"\x0fexpiration_time\x18* \x01(\x03R\x0eexpirationTime\x12\x10\n" +
	"\x03bid\x182 \x01(\x01R\x03bid\x12\x18\n" +
	"\abidhigh\x183 \x01(\x01R\abidhigh\x12\x16\n" +
	"\x06bidlow\x184 \x01(\x01R\x06bidlow\x12\x10\n" +
	"\x03ask\x185 \x01(\x01R\x03ask\x12\x18\n" +
	"\aaskhigh\x186 \x01(\x01R\aaskhigh\x12\x16\n" +
	"\x06asklow\x187 \x01(\x01R\x06asklow\x12\x12\n" +
	"\x04last\x188 \x01(\x01R\x04last\x12\x1a\n" +
	"\blasthigh\x189 \x01(\x01R\blasthigh\x12\x18\n" +
	"\alastlow\x18: \x01(\x01R\alastlow\x12\x1f\n" +
	"\vvolume_real\x18; \x01(\x01R\n" +
	"volumeReal\x12'\n" +
	"\x0fvolumehigh_real\x18< \x01(\x01R\x0evolumehighReal\x12%\n" +
	"\x0evolumelow_real\x18= \x01(\x01R\rvolumelowReal\x12#\n" +
	"\roption_strike\x18> \x01(\x01R\foptionStrike\x12\x14\n" +
	"\x05point\x18? \x01(\x01R\x05point\x12(\n" +
	"\x10trade_tick_value\x18@ \x01(\x01R\x0etradeTickValue\x125\n" +
	"\x17trade_tick_value_profit\x18A \x01(\x01R\x14tradeTickValueProfit\x121\n" +
	"\x15trade_tick_value_loss\x18B \x01(\x01R\x12tradeTickValueLoss\x12&\n" +
	"\x0ftrade_tick_size\x18C \x01(\x01R\rtradeTickSize\x12.\n" +
	"\x13trade_contract_size\x18D \x01(\x01R\x11tradeContractSize\x124\n" +
	"\x16trade_accrued_interest\x18E \x01(\x01R\x14tradeAccruedInterest\x12(\n" +
	"\x10trade_face_value\x18F \x01(\x01R\x0etradeFaceValue\x120\n" +
	"\x14trade_liquidity_rate\x18G \x01(\x01R\x12tradeLiquidityRate\x12\x1d\n" +
	"\n" +
	"volume_min\x18H \x01(\x01R\tvolumeMin\x12\x1d\n" +
	"\n" +
	"volume_max\x18I \x01(\x01R\tvolumeMax\x12\x1f\n" +
	"\vvolume_step\x18J \x01(\x01R\n" +
	"volumeStep\x12!\n" +
	"\fvolume_limit\x18K \x01(\x01R\vvolumeLimit\x12\x1b\n" +
	"\tswap_long\x18L \x01(\x01R\bswapLong\x12\x1d\n" +
	"\n" +
	"swap_short\x18M \x01(\x01R\tswapShort\x12%\n" +
	"\x0emargin_initial\x18N \x01(\x01R\rmarginInitial\x12-\n" +
	"\x12margin_maintenance\x18O \x01(\x01R\x11marginMaintenance\x12%\n" +
	"\x0esession_volume\x18P \x01(\x01R\rsessionVolume\x12)\n" +
	"\x10session_turnover\x18Q \x01(\x01R\x0fsessionTurnover\x12)\n" +
	"\x10session_interest\x18R \x01(\x01R\x0fsessionInterest\x129\n" +
	"\x19session_buy_orders_volume\x18S \x01(\x01R\x16sessionBuyOrdersVolume\x12;\n" +
	"\x1asession_sell_orders_volume\x18T \x01(\x01R\x17sessionSellOrdersVolume\x12!\n" +
	"\fsession_open\x18U \x01(\x01R\vsessionOpen\x12#\n" +
	"\rsession_close\x18V \x01(\x01R\fsessionClose\x12\x1d\n" +
	"\n" +
	"session_aw\x18W \x01(\x01R\tsessionAw\x128\n" +
	"\x18session_price_settlement\x18X \x01(\x01R\x16sessionPriceSettlement\x125\n" +
	"\x17session_price_limit_min\x18Y \x01(\x01R\x14sessionPriceLimitMin\x125\n" +
	"\x17session_price_limit_max\x18Z \x01(\x01R\x14sessionPriceLimitMax\x12#\n" +
	"\rmargin_hedged\x18[ \x01(\x01R\fmarginHedged\x12!\n" +
	"\fprice_change\x18\\ \x01(\x01R\vpriceChange\x12)\n" +
	"\x10price_volatility\x18] \x01(\x01R\x0fpriceVolatility\x12+\n" +
	"\x11price_theoretical\x18^ \x01(\x01R\x10priceTheoretical\x12,\n" +
	"\x12price_greeks_delta\x18_ \x01(\x01R\x10priceGreeksDelta\x12,\n" +
	"\x12price_greeks_theta\x18` \x01(\x01R\x10priceGreeksTheta\x12,\n" +
	"\x12price_greeks_gamma\x18a \x01(\x01R\x10priceGreeksGamma\x12*\n" +
	"\x11price_greeks_vega\x18b \x01(\x01R\x0fpriceGreeksVega\x12(\n" +
	"\x10price_greeks_rho\x18c \x01(\x01R\x0epriceGreeksRho\x12,\n" +
	"\x12price_greeks_omega\x18d \x01(\x01R\x10priceGreeksOmega\x12+\n" +
	"\x11price_sensitivity\x18e \x01(\x01R\x10priceSensitivity\x12\x14\n" +
	"\x05basis\x18n \x01(\tR\x05basis\x12\x1a\n" +
	"\bcategory\x18o \x01(\tR\bcategory\x12#\n" +
	"\rcurrency_base\x18p \x01(\tR\fcurrencyBase\x12'\n" +
	"\x0fcurrency_profit\x18q \x01(\tR\x0ecurrencyProfit\x12'\n" +
	"\x0fcurrency_margin\x18r \x01(\tR\x0ecurrencyMargin\x12\x12\n" +
	"\x04bank\x18s \x01(\tR\x04bank\x12 \n" +
	"\vdescription\x18t \x01(\tR\vdescription\x12\x1a\n" +
	"\bexchange\x18u \x01(\tR\bexchange\x12\x18\n" +
	"\aformula\x18v \x01(\tR\aformula\x12\x12\n" +
	"\x04isin\x18w \x01(\tR\x04isin\x12\x12\n" +
	"\x04name\x18x \x01(\tR\x04name\x12\x12\n" +
	"\x04page\x18y \x01(\tR\x04page\x12\x12\n" +
	"\x04path\x18z \x01(\tR\x04path\"+\n" +
	"\x11SymbolInfoRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"o\n" +
	"\x12SymbolInfoResponse\x12,\n" +
	"\vsymbol_info\x18\x01 \x01(\v2\v.SymbolInfoR\n" +
	"symbolInfo\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"h\n" +
	"\x14SymbolsTotalResponse\x12#\n" +
	"\rsymbols_total\x18\x01 \x01(\x03R\fsymbolsTotal\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"/\n" +
	"\x15SymbolInfoTickRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"`\n" +
	"\x16SymbolInfoTickResponse\x12\x19\n" +
	"\x04tick\x18\x01 \x01(\v2\x05.TickR\x04tick\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"E\n" +
	"\x13SymbolSelectRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x16\n" +
	"\x06enable\x18\x02 \x01(\bR\x06enable\"]\n" +
	"\x14SymbolSelectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xbe\x04\n" +
	"\n" +
	"TradeOrder\x12\x16\n" +
	"\x06ticket\x18\x01 \x01(\x03R\x06ticket\x12\x1d\n" +
	"\n" +
	"time_setup\x18\x02 \x01(\x03R\ttimeSetup\x12$\n" +
	"\x0etime_setup_msc\x18\x03 \x01(\x03R\ftimeSetupMsc\x12\x1b\n" +
	"\ttime_done\x18\x04 \x01(\x03R\btimeDone\x12\"\n" +
	"\rtime_done_msc\x18\x05 \x01(\x03R\vtimeDoneMsc\x12'\n" +
	"\x0ftime_expiration\x18\x06 \x01(\x03R\x0etimeExpiration\x12\x12\n" +
	"\x04type\x18\a \x01(\x05R\x04type\x12\x1b\n" +
	"\ttype_time\x18\b \x01(\x05R\btypeTime\x12!\n" +
	"\ftype_filling\x18\t \x01(\x05R\vtypeFilling\x12!\n" +
	"\x05state\x18\n" +
	" \x01(\x0e2\v.OrderStateR\x05state\x12\x14\n" +
	"\x05magic\x18\v \x01(\x05R\x05magic\x12%\n" +
	"\x0evolume_current\x18\f \x01(\x01R\rvolumeCurrent\x12\x1d\n" +
	"\n" +
	"price_open\x18\r \x01(\x01R\tpriceOpen\x12\x0e\n" +
	"\x02sl\x18\x0e \x01(\x01R\x02sl\x12\x0e\n" +
	"\x02tp\x18\x0f \x01(\x01R\x02tp\x12#\n" +
	"\rprice_current\x18\x10 \x01(\x01R\fpriceCurrent\x12\x16\n" +
	"\x06symbol\x18\x11 \x01(\tR\x06symbol\x12\x18\n" +
	"\acomment\x18\x12 \x01(\tR\acomment\x12\x1f\n" +
	"\vexternal_id\x18\x13 \x01(\tR\n" +
	"externalId\"\x9d\x05\n" +
	"\fTradeRequest\x12$\n" +
	"\x06action\x18\x01 \x01(\x0e2\f.TradeActionR\x06action\x12\x14\n" +
	"\x05magic\x18\x02 \x01(\x05R\x05magic\x12\x19\n" +
	"\x05order\x18\x03 \x01(\x03H\x00R\x05order\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x04 \x01(\tH\x01R\x06symbol\x88\x01\x01\x12\x16\n" +
	"\x06volume\x18\x05 \x01(\x01R\x06volume\x12\x19\n" +
	"\x05price\x18\x06 \x01(\x01H\x02R\x05price\x88\x01\x01\x12!\n" +
	"\tstoplimit\x18\a \x01(\x01H\x03R\tstoplimit\x88\x01\x01\x12\x13\n" +
	"\x02sl\x18\b \x01(\x01H\x04R\x02sl\x88\x01\x01\x12\x13\n" +
	"\x02tp\x18\t \x01(\x01H\x05R\x02tp\x88\x01\x01\x12\x1c\n" +
	"\tdeviation\x18\n" +
	" \x01(\x05R\tdeviation\x12\x1e\n" +
	"\x04type\x18\v \x01(\x0e2\n" +
	".OrderTypeR\x04type\x124\n" +
	"\ftype_filling\x18\f \x01(\x0e2\x11.OrderTypeFillingR\vtypeFilling\x12'\n" +
	"\ttype_time\x18\r \x01(\x0e2\n" +
	".OrderTimeR\btypeTime\x12#\n" +
	"\n" +
	"expiration\x18\x0e \x01(\x03H\x06R\n" +
	"expiration\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\x0f \x01(\tH\aR\acomment\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x10 \x01(\x03H\bR\bposition\x88\x01\x01\x12$\n" +
	"\vposition_by\x18\x11 \x01(\x03H\tR\n" +
	"positionBy\x88\x01\x01B\b\n" +
	"\x06_orderB\t\n" +
	"\a_symbolB\b\n" +
	"\x06_priceB\f\n" +
	"\n" +
	"_stoplimitB\x05\n" +
	"\x03_slB\x05\n" +
	"\x03_tpB\r\n" +
	"\v_expirationB\n" +
	"\n" +
	"\b_commentB\v\n" +
	"\t_positionB\x0e\n" +
	"\f_position_by\"\xa7\x02\n" +
	"\x10OrderCheckResult\x12*\n" +
	"\aretcode\x18\x01 \x01(\x0e2\x10.TradeReturnCodeR\aretcode\x12\x18\n" +
	"\abalance\x18\x02 \x01(\x01R\abalance\x12\x16\n" +
	"\x06equity\x18\x03 \x01(\x01R\x06equity\x12\x16\n" +
	"\x06profit\x18\x04 \x01(\x01R\x06profit\x12\x16\n" +
	"\x06margin\x18\x05 \x01(\x01R\x06margin\x12\x1f\n" +
	"\vmargin_free\x18\x06 \x01(\x01R\n" +
	"marginFree\x12!\n" +
	"\fmargin_level\x18\a \x01(\x01R\vmarginLevel\x12\x18\n" +
	"\acomment\x18\b \x01(\tR\acomment\x12'\n" +
	"\arequest\x18\t \x01(\v2\r.TradeRequestR\arequest\"\xc6\x02\n" +
	"\x0fOrderSendResult\x12\x10\n" +
	"\x03ask\x18\x01 \x01(\x01R\x03ask\x12\x10\n" +
	"\x03bid\x18\x02 \x01(\x01R\x03bid\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\x12\x12\n" +
	"\x04deal\x18\x04 \x01(\x03R\x04deal\x12\x14\n" +
	"\x05order\x18\x05 \x01(\x03R\x05order\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\x12'\n" +
	"\arequest\x18\a \x01(\v2\r.TradeRequestR\arequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\b \x01(\x03R\trequestId\x12*\n" +
	"\aretcode\x18\t \x01(\x0e2\x10.TradeReturnCodeR\aretcode\x12)\n" +
	"\x10retcode_external\x18\n" +
	" \x01(\x05R\x0fretcodeExternal\x12\x16\n" +
	"\x06volume\x18\v \x01(\x01R\x06volume\"F\n" +
	"\x10OrderSendRequest\x122\n" +
	"\rtrade_request\x18\x01 \x01(\v2\r.TradeRequestR\ftradeRequest\"~\n" +
	"\x11OrderSendResponse\x12<\n" +
	"\x11order_send_result\x18\x01 \x01(\v2\x10.OrderSendResultR\x0forderSendResult\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x87\x01\n" +
	"\x10OrdersGetRequest\x12\x1b\n" +
	"\x06symbol\x18\x01 \x01(\tH\x00R\x06symbol\x88\x01\x01\x12\x19\n" +
	"\x05group\x18\x02 \x01(\tH\x01R\x05group\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x03 \x01(\x03H\x02R\x06ticket\x88\x01\x01B\t\n" +
	"\a_symbolB\b\n" +
	"\x06_groupB\t\n" +
	"\a_ticket\"e\n" +
	"\x11OrdersGetResponse\x12#\n" +
	"\x06orders\x18\x01 \x03(\v2\v.TradeOrderR\x06orders\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"G\n" +
	"\x11OrderCheckRequest\x122\n" +
	"\rtrade_request\x18\x01 \x01(\v2\r.TradeRequestR\ftradeRequest\"\x82\x01\n" +
	"\x12OrderCheckResponse\x12?\n" +
	"\x12order_check_result\x18\x01 \x01(\v2\x11.OrderCheckResultR\x10orderCheckResult\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"X\n" +
	"\x13OrdersTotalResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x82\x01\n" +
	"\x16OrderCalcMarginRequest\x12\"\n" +
	"\x06action\x18\x01 \x01(\x0e2\n" +
	".OrderTypeR\x06action\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x01R\x06volume\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\"^\n" +
	"\x17OrderCalcMarginResponse\x12\x16\n" +
	"\x06margin\x18\x01 \x01(\x01R\x06margin\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xac\x01\n" +
	"\x16OrderCalcProfitRequest\x12\"\n" +
	"\x06action\x18\x01 \x01(\x0e2\n" +
	".OrderTypeR\x06action\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x01R\x06volume\x12\x1d\n" +
	"\n" +
	"price_open\x18\x04 \x01(\x01R\tpriceOpen\x12\x1f\n" +
	"\vprice_close\x18\x05 \x01(\x01R\n" +
	"priceClose\"^\n" +
	"\x17OrderCalcProfitResponse\x12\x16\n" +
	"\x06profit\x18\x01 \x01(\x01R\x06profit\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x9c\x04\n" +
	"\rTradePosition\x12\x16\n" +
	"\x06ticket\x18\x01 \x01(\x03R\x06ticket\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12!\n" +
	"\x04type\x18\x03 \x01(\x0e2\r.PositionTypeR\x04type\x12\x14\n" +
	"\x05magic\x18\x04 \x01(\x05R\x05magic\x12\x1e\n" +
	"\n" +
	"identifier\x18\x05 \x01(\x03R\n" +
	"identifier\x12\x1f\n" +
	"\vexternal_id\x18\x06 \x01(\tR\n" +
	"externalId\x12'\n" +
	"\x06reason\x18\a \x01(\x0e2\x0f.PositionReasonR\x06reason\x12\x16\n" +
	"\x06volume\x18\b \x01(\x01R\x06volume\x12\x1d\n" +
	"\n" +
	"price_open\x18\t \x01(\x01R\tpriceOpen\x12\x0e\n" +
	"\x02sl\x18\n" +
	" \x01(\x01R\x02sl\x12\x0e\n" +
	"\x02tp\x18\v \x01(\x01R\x02tp\x12#\n" +
	"\rprice_current\x18\f \x01(\x01R\fpriceCurrent\x12\x12\n" +
	"\x04swap\x18\r \x01(\x01R\x04swap\x12\x16\n" +
	"\x06profit\x18\x0e \x01(\x01R\x06profit\x12\x18\n" +
	"\acomment\x18\x0f \x01(\tR\acomment\x12\x12\n" +
	"\x04time\x18\x10 \x01(\x03R\x04time\x12\x19\n" +
	"\btime_msc\x18\x11 \x01(\x03R\atimeMsc\x12\x1f\n" +
	"\vtime_update\x18\x12 \x01(\x03R\n" +
	"timeUpdate\x12&\n" +
	"\x0ftime_update_msc\x18\x13 \x01(\x03R\rtimeUpdateMsc\"\x8a\x01\n" +
	"\x13PositionsGetRequest\x12\x1b\n" +
	"\x06symbol\x18\x01 \x01(\tH\x00R\x06symbol\x88\x01\x01\x12\x19\n" +
	"\x05group\x18\x02 \x01(\tH\x01R\x05group\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x03 \x01(\x03H\x02R\x06ticket\x88\x01\x01B\t\n" +
	"\a_symbolB\b\n" +
	"\x06_groupB\t\n" +
	"\a_ticket\"q\n" +
	"\x14PositionsGetResponse\x12,\n" +
	"\tpositions\x18\x01 \x03(\v2\x0e.TradePositionR\tpositions\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"[\n" +
	"\x16PositionsTotalResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x89\x01\n" +
	"\x19HistoryOrdersTotalRequest\x127\n" +
	"\tdate_from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\"_\n" +
	"\x1aHistoryOrdersTotalResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xa6\x02\n" +
	"\x17HistoryOrdersGetRequest\x12<\n" +
	"\tdate_from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\bdateFrom\x88\x01\x01\x128\n" +
	"\adate_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x06dateTo\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x03 \x01(\x04H\x02R\x06ticket\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x04 \x01(\x04H\x03R\bposition\x88\x01\x01\x12\x19\n" +
	"\x05group\x18\x05 \x01(\tH\x04R\x05group\x88\x01\x01B\f\n" +
	"\n" +
	"_date_fromB\n" +
	"\n" +
	"\b_date_toB\t\n" +
	"\a_ticketB\v\n" +
	"\t_positionB\b\n" +
	"\x06_group\"l\n" +
	"\x18HistoryOrdersGetResponse\x12#\n" +
	"\x06orders\x18\x01 \x03(\v2\v.TradeOrderR\x06orders\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xe4\x03\n" +
	"\tTradeDeal\x12\x16\n" +
	"\x06ticket\x18\x01 \x01(\x03R\x06ticket\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1d\n" +
	"\x04type\x18\x03 \x01(\x0e2\t.DealTypeR\x04type\x12 \n" +
	"\x05entry\x18\x04 \x01(\x0e2\n" +
	".DealEntryR\x05entry\x12#\n" +
	"\x06reason\x18\x05 \x01(\x0e2\v.DealReasonR\x06reason\x12\x16\n" +
	"\x06volume\x18\x06 \x01(\x01R\x06volume\x12\x14\n" +
	"\x05price\x18\a \x01(\x01R\x05price\x12\x1e\n" +
	"\n" +
	"commission\x18\b \x01(\x01R\n" +
	"commission\x12\x12\n" +
	"\x04swap\x18\t \x01(\x01R\x04swap\x12\x16\n" +
	"\x06profit\x18\n" +
	" \x01(\x01R\x06profit\x12\x14\n" +
	"\x05magic\x18\v \x01(\x05R\x05magic\x12\x14\n" +
	"\x05order\x18\f \x01(\x03R\x05order\x12\x1f\n" +
	"\vposition_id\x18\r \x01(\x03R\n" +
	"positionId\x12\x18\n" +
	"\acomment\x18\x0e \x01(\tR\acomment\x12\x1f\n" +
	"\vexternal_id\x18\x0f \x01(\tR\n" +
	"externalId\x12\x10\n" +
	"\x03fee\x18\x10 \x01(\x01R\x03fee\x12\x12\n" +
	"\x04time\x18\x11 \x01(\x03R\x04time\x12\x19\n" +
	"\btime_msc\x18\x12 \x01(\x03R\atimeMsc\"\x88\x01\n" +
	"\x18HistoryDealsTotalRequest\x127\n" +
	"\tdate_from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\"^\n" +
	"\x19HistoryDealsTotalResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xa5\x02\n" +
	"\x16HistoryDealsGetRequest\x12<\n" +
	"\tdate_from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\bdateFrom\x88\x01\x01\x128\n" +
	"\adate_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x06dateTo\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x03 \x01(\x04H\x02R\x06ticket\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x04 \x01(\x04H\x03R\bposition\x88\x01\x01\x12\x19\n" +
	"\x05group\x18\x05 \x01(\tH\x04R\x05group\x88\x01\x01B\f\n" +
	"\n" +
	"_date_fromB\n" +
	"\n" +
	"\b_date_toB\t\n" +
	"\a_ticketB\v\n" +
	"\t_positionB\b\n" +
	"\x06_group\"h\n" +
	"\x17HistoryDealsGetResponse\x12 \n" +
	"\x05deals\x18\x01 \x03(\v2\n" +
	".TradeDealR\x05deals\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"@\n" +
	"\x11LastErrorResponse\x12!\n" +
	"\x05error\x18\x01 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"v\n" +
	"\bBookInfo\x12\x14\n" +
	"\x05price\x18\x01 \x01(\x01R\x05price\x12\x1d\n" +
	"\x04type\x18\x02 \x01(\x0e2\t.BookTypeR\x04type\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x01R\x06volume\x12\x1d\n" +
	"\n" +
	"volume_dbl\x18\x04 \x01(\x01R\tvolumeDbl\".\n" +
	"\x14MarketBookAddRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"^\n" +
	"\x15MarketBookAddResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\".\n" +
	"\x14MarketBookGetRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"n\n" +
	"\x15MarketBookGetResponse\x12(\n" +
	"\n" +
	"book_infos\x18\x01 \x03(\v2\t.BookInfoR\tbookInfos\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"2\n" +
	"\x18MarketBookReleaseRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"b\n" +
	"\x19MarketBookReleaseResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"q\n" +
	"\x11InitializeRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06server\x18\x02 \x01(\tR\x06server\x12\x14\n" +
	"\x05login\x18\x03 \x01(\x03R\x05login\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\"[\n" +
	"\x12InitializeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"X\n" +
	"\fLoginRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\x03R\x05login\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x16\n" +
	"\x06server\x18\x03 \x01(\tR\x06server\"V\n" +
	"\rLoginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"Y\n" +
	"\x10ShutdownResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"m\n" +
	"\aVersion\x12)\n" +
	"\x10terminal_version\x18\x01 \x01(\x05R\x0fterminalVersion\x12\x14\n" +
	"\x05build\x18\x02 \x01(\x05R\x05build\x12!\n" +
	"\frelease_date\x18\x03 \x01(\tR\vreleaseDate\"b\n" +
	"\x0fVersionResponse\x12\"\n" +
	"\aversion\x18\x01 \x01(\v2\b.VersionR\aversion\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xa6\a\n" +
	"\vAccountInfo\x12\x16\n" +
	"\x06assets\x18\x01 \x01(\x01R\x06assets\x12\x18\n" +
	"\abalance\x18\x02 \x01(\x01R\abalance\x12-\n" +
	"\x12commission_blocked\x18\x03 \x01(\x01R\x11commissionBlocked\x12\x18\n" +
	"\acompany\x18\x04 \x01(\tR\acompany\x12\x16\n" +
	"\x06credit\x18\x05 \x01(\x01R\x06credit\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12'\n" +
	"\x0fcurrency_digits\x18\a \x01(\x05R\x0ecurrencyDigits\x12\x16\n" +
	"\x06equity\x18\b \x01(\x01R\x06equity\x12\x1d\n" +
	"\n" +
	"fifo_close\x18\t \x01(\x05R\tfifoClose\x12\x1a\n" +
	"\bleverage\x18\n" +
	" \x01(\x05R\bleverage\x12 \n" +
	"\vliabilities\x18\v \x01(\x01R\vliabilities\x12!\n" +
	"\flimit_orders\x18\f \x01(\x05R\vlimitOrders\x12\x14\n" +
	"\x05login\x18\r \x01(\x04R\x05login\x12\x16\n" +
	"\x06margin\x18\x0e \x01(\x01R\x06margin\x12\x1f\n" +
	"\vmargin_free\x18\x0f \x01(\x01R\n" +
	"marginFree\x12%\n" +
	"\x0emargin_initial\x18\x10 \x01(\x01R\rmarginInitial\x12!\n" +
	"\fmargin_level\x18\x11 \x01(\x01R\vmarginLevel\x12-\n" +
	"\x12margin_maintenance\x18\x12 \x01(\x01R\x11marginMaintenance\x123\n" +
	"\vmargin_mode\x18\x13 \x01(\x0e2\x12.AccountMarginModeR\n" +
	"marginMode\x12$\n" +
	"\x0emargin_so_call\x18\x14 \x01(\x01R\fmarginSoCall\x12$\n" +
	"\x0emargin_so_mode\x18\x15 \x01(\x05R\fmarginSoMode\x12 \n" +
	"\fmargin_so_so\x18\x16 \x01(\x01R\n" +
	"marginSoSo\x12\x12\n" +
	"\x04name\x18\x17 \x01(\tR\x04name\x12\x16\n" +
	"\x06profit\x18\x18 \x01(\x01R\x06profit\x12\x16\n" +
	"\x06server\x18\x19 \x01(\tR\x06server\x12#\n" +
	"\rtrade_allowed\x18\x1a \x01(\bR\ftradeAllowed\x12!\n" +
	"\ftrade_expert\x18\x1b \x01(\bR\vtradeExpert\x120\n" +
	"\n" +
	"trade_mode\x18\x1c \x01(\x0e2\x11.AccountTradeModeR\ttradeMode\"\xf2\x05\n" +
	"\fTerminalInfo\x12\x14\n" +
	"\x05build\x18\x01 \x01(\x05R\x05build\x12\x1a\n" +
	"\bcodepage\x18\x02 \x01(\x05R\bcodepage\x12'\n" +
	"\x0fcommondata_path\x18\x03 \x01(\tR\x0ecommondataPath\x12+\n" +
	"\x11community_account\x18\x04 \x01(\bR\x10communityAccount\x12+\n" +
	"\x11community_balance\x18\x05 \x01(\x01R\x10communityBalance\x121\n" +
	"\x14community_connection\x18\x06 \x01(\bR\x13communityConnection\x12\x18\n" +
	"\acompany\x18\a \x01(\tR\acompany\x12\x1c\n" +
	"\tconnected\x18\b \x01(\bR\tconnected\x12\x1b\n" +
	"\tdata_path\x18\t \x01(\tR\bdataPath\x12!\n" +
	"\fdlls_allowed\x18\n" +
	" \x01(\bR\vdllsAllowed\x12#\n" +
	"\remail_enabled\x18\v \x01(\bR\femailEnabled\x12\x1f\n" +
	"\vftp_enabled\x18\f \x01(\bR\n" +
	"ftpEnabled\x12\x1a\n" +
	"\blanguage\x18\r \x01(\tR\blanguage\x12\x18\n" +
	"\amaxbars\x18\x0e \x01(\x05R\amaxbars\x12\x12\n" +
	"\x04mqid\x18\x0f \x01(\bR\x04mqid\x12\x12\n" +
	"\x04name\x18\x10 \x01(\tR\x04name\x123\n" +
	"\x15notifications_enabled\x18\x11 \x01(\bR\x14notificationsEnabled\x12\x12\n" +
	"\x04path\x18\x12 \x01(\tR\x04path\x12\x1b\n" +
	"\tping_last\x18\x13 \x01(\x05R\bpingLast\x12&\n" +
	"\x0eretransmission\x18\x14 \x01(\x02R\x0eretransmission\x12+\n" +
	"\x11tradeapi_disabled\x18\x15 \x01(\bR\x10tradeapiDisabled\x12#\n" +
	"\rtrade_allowed\x18\x16 \x01(\bR\ftradeAllowed\"s\n" +
	"\x13AccountInfoResponse\x12/\n" +
	"\faccount_info\x18\x01 \x01(\v2\f.AccountInfoR\vaccountInfo\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"w\n" +
	"\x14TerminalInfoResponse\x122\n" +
	"\rterminal_info\x18\x01 \x01(\v2\r.TerminalInfoR\fterminalInfo\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"y\n" +
	"\fCloseRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\acomment\x18\x02 \x01(\tH\x00R\acomment\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x03 \x01(\x03H\x01R\x06ticket\x88\x01\x01B\n" +
	"\n" +
	"\b_commentB\t\n" +
	"\a_ticket\"z\n" +
	"\rCloseResponse\x12<\n" +
	"\x11order_send_result\x18\x01 \x01(\v2\x10.OrderSendResultR\x0forderSendResult\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xb4\x01\n" +
	"\n" +
	"BuyRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x16\n" +
	"\x06volume\x18\x02 \x01(\x01R\x06volume\x12\x19\n" +
	"\x05price\x18\x03 \x01(\x01H\x00R\x05price\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\x04 \x01(\tH\x01R\acomment\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x05 \x01(\x03H\x02R\x06ticket\x88\x01\x01B\b\n" +
	"\x06_priceB\n" +
	"\n" +
	"\b_commentB\t\n" +
	"\a_ticket\"x\n" +
	"\vBuyResponse\x12<\n" +
	"\x11order_send_result\x18\x01 \x01(\v2\x10.OrderSendResultR\x0forderSendResult\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xb5\x01\n" +
	"\vSellRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x16\n" +
	"\x06volume\x18\x02 \x01(\x01R\x06volume\x12\x19\n" +
	"\x05price\x18\x03 \x01(\x01H\x00R\x05price\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\x04 \x01(\tH\x01R\acomment\x88\x01\x01\x12\x1b\n" +
	"\x06ticket\x18\x05 \x01(\x03H\x02R\x06ticket\x88\x01\x01B\b\n" +
	"\x06_priceB\n" +
	"\n" +
	"\b_commentB\t\n" +
	"\a_ticket\"y\n" +
	"\fSellResponse\x12<\n" +
	"\x11order_send_result\x18\x01 \x01(\v2\x10.OrderSendResultR\x0forderSendResult\x12!\n" +
	"\x05error\x18\x02 \x01(\v2\x06.ErrorH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_errorBHZFgithub.com/hybrid-syntax/mt5-grpc/go/mt5grpc/generated_proto;mt5grpcpbb\x06proto3"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_messages_proto_goTypes = []any{
	(*Error)(nil),                      // 0: Error
	(*Rates)(nil),                      // 1: Rates
	(*Ticks)(nil),                      // 2: Ticks
	(*Tick)(nil),                       // 3: Tick
	(*CopyRatesRangeRequest)(nil),      // 4: CopyRatesRangeRequest
	(*CopyRatesFromRequest)(nil),       // 5: CopyRatesFromRequest
	(*CopyRatesFromPosRequest)(nil),    // 6: CopyRatesFromPosRequest
	(*CopyTicksFromRequest)(nil),       // 7: CopyTicksFromRequest
	(*CopyTicksRangeRequest)(nil),      // 8: CopyTicksRangeRequest
	(*CopyRatesResponse)(nil),          // 9: CopyRatesResponse
	(*CopyTicksResponse)(nil),          // 10: CopyTicksResponse
	(*SymbolsGetRequest)(nil),          // 11: SymbolsGetRequest
	(*SymbolsGetResponse)(nil),         // 12: SymbolsGetResponse
	(*SymbolInfo)(nil),                 // 13: SymbolInfo
	(*SymbolInfoRequest)(nil),          // 14: SymbolInfoRequest
	(*SymbolInfoResponse)(nil),         // 15: SymbolInfoResponse
	(*SymbolsTotalResponse)(nil),       // 16: SymbolsTotalResponse
	(*SymbolInfoTickRequest)(nil),      // 17: SymbolInfoTickRequest
	(*SymbolInfoTickResponse)(nil),     // 18: SymbolInfoTickResponse
	(*SymbolSelectRequest)(nil),        // 19: SymbolSelectRequest
	(*SymbolSelectResponse)(nil),       // 20: SymbolSelectResponse
	(*TradeOrder)(nil),                 // 21: TradeOrder
	(*TradeRequest)(nil),               // 22: TradeRequest
	(*OrderCheckResult)(nil),           // 23: OrderCheckResult
	(*OrderSendResult)(nil),            // 24: OrderSendResult
	(*OrderSendRequest)(nil),           // 25: OrderSendRequest
	(*OrderSendResponse)(nil),          // 26: OrderSendResponse
	(*OrdersGetRequest)(nil),           // 27: OrdersGetRequest
	(*OrdersGetResponse)(nil),          // 28: OrdersGetResponse
	(*OrderCheckRequest)(nil),          // 29: OrderCheckRequest
	(*OrderCheckResponse)(nil),         // 30: OrderCheckResponse
	(*OrdersTotalResponse)(nil),        // 31: OrdersTotalResponse
	(*OrderCalcMarginRequest)(nil),     // 32: OrderCalcMarginRequest
	(*OrderCalcMarginResponse)(nil),    // 33: OrderCalcMarginResponse
	(*OrderCalcProfitRequest)(nil),     // 34: OrderCalcProfitRequest
	(*OrderCalcProfitResponse)(nil),    // 35: OrderCalcProfitResponse
	(*TradePosition)(nil),              // 36: TradePosition
	(*PositionsGetRequest)(nil),        // 37: PositionsGetRequest
	(*PositionsGetResponse)(nil),       // 38: PositionsGetResponse
	(*PositionsTotalResponse)(nil),     // 39: PositionsTotalResponse
	(*HistoryOrdersTotalRequest)(nil),  // 40: HistoryOrdersTotalRequest
	(*HistoryOrdersTotalResponse)(nil), // 41: HistoryOrdersTotalResponse
	(*HistoryOrdersGetRequest)(nil),    // 42: HistoryOrdersGetRequest
	(*HistoryOrdersGetResponse)(nil),   // 43: HistoryOrdersGetResponse
	(*TradeDeal)(nil),                  // 44: TradeDeal
	(*HistoryDealsTotalRequest)(nil),   // 45: HistoryDealsTotalRequest
	(*HistoryDealsTotalResponse)(nil),  // 46: HistoryDealsTotalResponse
	(*HistoryDealsGetRequest)(nil),     // 47: HistoryDealsGetRequest
	(*HistoryDealsGetResponse)(nil),    // 48: HistoryDealsGetResponse
	(*LastErrorResponse)(nil),          // 49: LastErrorResponse
	(*BookInfo)(nil),                   // 50: BookInfo
	(*MarketBookAddRequest)(nil),       // 51: MarketBookAddRequest
	(*MarketBookAddResponse)(nil),      // 52: MarketBookAddResponse
	(*MarketBookGetRequest)(nil),       // 53: MarketBookGetRequest
	(*MarketBookGetResponse)(nil),      // 54: MarketBookGetResponse
	(*MarketBookReleaseRequest)(nil),   // 55: MarketBookReleaseRequest
	(*MarketBookReleaseResponse)(nil),  // 56: MarketBookReleaseResponse
	(*InitializeRequest)(nil),          // 57: InitializeRequest
	(*InitializeResponse)(nil),         // 58: InitializeResponse
	(*LoginRequest)(nil),               // 59: LoginRequest
	(*LoginResponse)(nil),              // 60: LoginResponse
	(*ShutdownResponse)(nil),           // 61: ShutdownResponse
	(*Version)(nil),                    // 62: Version
	(*VersionResponse)(nil),            // 63: VersionResponse
	(*AccountInfo)(nil),                // 64: AccountInfo
	(*TerminalInfo)(nil),               // 65: TerminalInfo
	(*AccountInfoResponse)(nil),        // 66: AccountInfoResponse
	(*TerminalInfoResponse)(nil),       // 67: TerminalInfoResponse
	(*CloseRequest)(nil),               // 68: CloseRequest
	(*CloseResponse)(nil),              // 69: CloseResponse
	(*BuyRequest)(nil),                 // 70: BuyRequest
	(*BuyResponse)(nil),                // 71: BuyResponse
	(*SellRequest)(nil),                // 72: SellRequest
	(*SellResponse)(nil),               // 73: SellResponse
	(TickFlag)(0),                      // 74: TickFlag
	(TimeFrame)(0),                     // 75: TimeFrame
	(*timestamppb.Timestamp)(nil),      // 76: google.protobuf.Timestamp
	(SymbolChartMode)(0),               // 77: SymbolChartMode
	(SymbolCalcMode)(0),                // 78: SymbolCalcMode
	(SymbolTradeMode)(0),               // 79: SymbolTradeMode
	(SymbolSwapMode)(0),                // 80: SymbolSwapMode
	(SymbolTradeExecution)(0),          // 81: SymbolTradeExecution
	(SymbolOrderGTCMode)(0),            // 82: SymbolOrderGTCMode
	(SymbolOptionMode)(0),              // 83: SymbolOptionMode
	(SymbolOptionRight)(0),             // 84: SymbolOptionRight
	(OrderState)(0),                    // 85: OrderState
	(TradeAction)(0),                   // 86: TradeAction
	(OrderType)(0),                     // 87: OrderType
	(OrderTypeFilling)(0),              // 88: OrderTypeFilling
	(OrderTime)(0),                     // 89: OrderTime
	(TradeReturnCode)(0),               // 90: TradeReturnCode
	(PositionType)(0),                  // 91: PositionType
	(PositionReason)(0),                // 92: PositionReason
	(DealType)(0),                      // 93: DealType
	(DealEntry)(0),                     // 94: DealEntry
	(DealReason)(0),                    // 95: DealReason
	(BookType)(0),                      // 96: BookType
	(AccountMarginMode)(0),             // 97: AccountMarginMode
	(AccountTradeMode)(0),              // 98: AccountTradeMode
}
var file_messages_proto_depIdxs = []int32{
	74, // 0: Ticks.flags:type_name -> TickFlag
	75, // 1: CopyRatesRangeRequest.timeframe:type_name -> TimeFrame
	76, // 2: CopyRatesRangeRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 3: CopyRatesRangeRequest.date_to:type_name -> google.protobuf.Timestamp
	75, // 4: CopyRatesFromRequest.timeframe:type_name -> TimeFrame
	76, // 5: CopyRatesFromRequest.date_from:type_name -> google.protobuf.Timestamp
	75, // 6: CopyRatesFromPosRequest.timeframe:type_name -> TimeFrame
	76, // 7: CopyTicksFromRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 8: CopyTicksRangeRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 9: CopyTicksRangeRequest.date_to:type_name -> google.protobuf.Timestamp
	1,  // 10: CopyRatesResponse.rates:type_name -> Rates
	0,  // 11: CopyRatesResponse.error:type_name -> Error
	2,  // 12: CopyTicksResponse.ticks:type_name -> Ticks
	0,  // 13: CopyTicksResponse.error:type_name -> Error
	0,  // 14: SymbolsGetRequest.error:type_name -> Error
	13, // 15: SymbolsGetResponse.symbols:type_name -> SymbolInfo
	0,  // 16: SymbolsGetResponse.error:type_name -> Error
	77, // 17: SymbolInfo.chart_mode:type_name -> SymbolChartMode
	78, // 18: SymbolInfo.trade_calc_mode:type_name -> SymbolCalcMode
	79, // 19: SymbolInfo.trade_mode:type_name -> SymbolTradeMode
	80, // 20: SymbolInfo.swap_mode:type_name -> SymbolSwapMode
	81, // 21: SymbolInfo.expiration_mode:type_name -> SymbolTradeExecution
	82, // 22: SymbolInfo.order_gtc_mode:type_name -> SymbolOrderGTCMode
	83, // 23: SymbolInfo.option_mode:type_name -> SymbolOptionMode
	84, // 24: SymbolInfo.option_right:type_name -> SymbolOptionRight
	13, // 25: SymbolInfoResponse.symbol_info:type_name -> SymbolInfo
	0,  // 26: SymbolInfoResponse.error:type_name -> Error
	0,  // 27: SymbolsTotalResponse.error:type_name -> Error
	3,  // 28: SymbolInfoTickResponse.tick:type_name -> Tick
	0,  // 29: SymbolInfoTickResponse.error:type_name -> Error
	0,  // 30: SymbolSelectResponse.error:type_name -> Error
	85, // 31: TradeOrder.state:type_name -> OrderState
	86, // 32: TradeRequest.action:type_name -> TradeAction
	87, // 33: TradeRequest.type:type_name -> OrderType
	88, // 34: TradeRequest.type_filling:type_name -> OrderTypeFilling
	89, // 35: TradeRequest.type_time:type_name -> OrderTime
	90, // 36: OrderCheckResult.retcode:type_name -> TradeReturnCode
	22, // 37: OrderCheckResult.request:type_name -> TradeRequest
	22, // 38: OrderSendResult.request:type_name -> TradeRequest
	90, // 39: OrderSendResult.retcode:type_name -> TradeReturnCode
	22, // 40: OrderSendRequest.trade_request:type_name -> TradeRequest
	24, // 41: OrderSendResponse.order_send_result:type_name -> OrderSendResult
	0,  // 42: OrderSendResponse.error:type_name -> Error
	21, // 43: OrdersGetResponse.orders:type_name -> TradeOrder
	0,  // 44: OrdersGetResponse.error:type_name -> Error
	22, // 45: OrderCheckRequest.trade_request:type_name -> TradeRequest
	23, // 46: OrderCheckResponse.order_check_result:type_name -> OrderCheckResult
	0,  // 47: OrderCheckResponse.error:type_name -> Error
	0,  // 48: OrdersTotalResponse.error:type_name -> Error
	87, // 49: OrderCalcMarginRequest.action:type_name -> OrderType
	0,  // 50: OrderCalcMarginResponse.error:type_name -> Error
	87, // 51: OrderCalcProfitRequest.action:type_name -> OrderType
	0,  // 52: OrderCalcProfitResponse.error:type_name -> Error
	91, // 53: TradePosition.type:type_name -> PositionType
	92, // 54: TradePosition.reason:type_name -> PositionReason
	36, // 55: PositionsGetResponse.positions:type_name -> TradePosition
	0,  // 56: PositionsGetResponse.error:type_name -> Error
	0,  // 57: PositionsTotalResponse.error:type_name -> Error
	76, // 58: HistoryOrdersTotalRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 59: HistoryOrdersTotalRequest.date_to:type_name -> google.protobuf.Timestamp
	0,  // 60: HistoryOrdersTotalResponse.error:type_name -> Error
	76, // 61: HistoryOrdersGetRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 62: HistoryOrdersGetRequest.date_to:type_name -> google.protobuf.Timestamp
	21, // 63: HistoryOrdersGetResponse.orders:type_name -> TradeOrder
	0,  // 64: HistoryOrdersGetResponse.error:type_name -> Error
	93, // 65: TradeDeal.type:type_name -> DealType
	94, // 66: TradeDeal.entry:type_name -> DealEntry
	95, // 67: TradeDeal.reason:type_name -> DealReason
	76, // 68: HistoryDealsTotalRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 69: HistoryDealsTotalRequest.date_to:type_name -> google.protobuf.Timestamp
	0,  // 70: HistoryDealsTotalResponse.error:type_name -> Error
	76, // 71: HistoryDealsGetRequest.date_from:type_name -> google.protobuf.Timestamp
	76, // 72: HistoryDealsGetRequest.date_to:type_name -> google.protobuf.Timestamp
	44, // 73: HistoryDealsGetResponse.deals:type_name -> TradeDeal
	0,  // 74: HistoryDealsGetResponse.error:type_name -> Error
	0,  // 75: LastErrorResponse.error:type_name -> Error
	96, // 76: BookInfo.type:type_name -> BookType
	0,  // 77: MarketBookAddResponse.error:type_name -> Error
	50, // 78: MarketBookGetResponse.book_infos:type_name -> BookInfo
	0,  // 79: MarketBookGetResponse.error:type_name -> Error
	0,  // 80: MarketBookReleaseResponse.error:type_name -> Error
	0,  // 81: InitializeResponse.error:type_name -> Error
	0,  // 82: LoginResponse.error:type_name -> Error
	0,  // 83: ShutdownResponse.error:type_name -> Error
	62, // 84: VersionResponse.version:type_name -> Version
	0,  // 85: VersionResponse.error:type_name -> Error
	97, // 86: AccountInfo.margin_mode:type_name -> AccountMarginMode
	98, // 87: AccountInfo.trade_mode:type_name -> AccountTradeMode
	64, // 88: AccountInfoResponse.account_info:type_name -> AccountInfo
	0,  // 89: AccountInfoResponse.error:type_name -> Error
	65, // 90: TerminalInfoResponse.terminal_info:type_name -> TerminalInfo
	0,  // 91: TerminalInfoResponse.error:type_name -> Error
	24, // 92: CloseResponse.order_send_result:type_name -> OrderSendResult
	0,  // 93: CloseResponse.error:type_name -> Error
	24, // 94: BuyResponse.order_send_result:type_name -> OrderSendResult
	0,  // 95: BuyResponse.error:type_name -> Error
	24, // 96: SellResponse.order_send_result:type_name -> OrderSendResult
	0,  // 97: SellResponse.error:type_name -> Error
	98, // [98:98] is the sub-list for method output_type
	98, // [98:98] is the sub-list for method input_type
	98, // [98:98] is the sub-list for extension type_name
	98, // [98:98] is the sub-list for extension extendee
	0,  // [0:98] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_enums_proto_init()
	file_messages_proto_msgTypes[9].OneofWrappers = []any{}
	file_messages_proto_msgTypes[10].OneofWrappers = []any{}
	file_messages_proto_msgTypes[11].OneofWrappers = []any{}
	file_messages_proto_msgTypes[12].OneofWrappers = []any{}
	file_messages_proto_msgTypes[15].OneofWrappers = []any{}
	file_messages_proto_msgTypes[16].OneofWrappers = []any{}
	file_messages_proto_msgTypes[18].OneofWrappers = []any{}
	file_messages_proto_msgTypes[20].OneofWrappers = []any{}
	file_messages_proto_msgTypes[22].OneofWrappers = []any{}
	file_messages_proto_msgTypes[26].OneofWrappers = []any{}
	file_messages_proto_msgTypes[27].OneofWrappers = []any{}
	file_messages_proto_msgTypes[28].OneofWrappers = []any{}
	file_messages_proto_msgTypes[30].OneofWrappers = []any{}
	file_messages_proto_msgTypes[31].OneofWrappers = []any{}
	file_messages_proto_msgTypes[33].OneofWrappers = []any{}
	file_messages_proto_msgTypes[35].OneofWrappers = []any{}
	file_messages_proto_msgTypes[37].OneofWrappers = []any{}
	file_messages_proto_msgTypes[38].OneofWrappers = []any{}
	file_messages_proto_msgTypes[39].OneofWrappers = []any{}
	file_messages_proto_msgTypes[41].OneofWrappers = []any{}
	file_messages_proto_msgTypes[42].OneofWrappers = []any{}
	file_messages_proto_msgTypes[43].OneofWrappers = []any{}
	file_messages_proto_msgTypes[46].OneofWrappers = []any{}
	file_messages_proto_msgTypes[47].OneofWrappers = []any{}
	file_messages_proto_msgTypes[48].OneofWrappers = []any{}
	file_messages_proto_msgTypes[49].OneofWrappers = []any{}
	file_messages_proto_msgTypes[52].OneofWrappers = []any{}
	file_messages_proto_msgTypes[54].OneofWrappers = []any{}
	file_messages_proto_msgTypes[56].OneofWrappers = []any{}
	file_messages_proto_msgTypes[58].OneofWrappers = []any{}
	file_messages_proto_msgTypes[60].OneofWrappers = []any{}
	file_messages_proto_msgTypes[61].OneofWrappers = []any{}
	file_messages_proto_msgTypes[63].OneofWrappers = []any{}
	file_messages_proto_msgTypes[66].OneofWrappers = []any{}
	file_messages_proto_msgTypes[67].OneofWrappers = []any{}
	file_messages_proto_msgTypes[68].OneofWrappers = []any{}
	file_messages_proto_msgTypes[69].OneofWrappers = []any{}
	file_messages_proto_msgTypes[70].OneofWrappers = []any{}
	file_messages_proto_msgTypes[71].OneofWrappers = []any{}
	file_messages_proto_msgTypes[72].OneofWrappers = []any{}
	file_messages_proto_msgTypes[73].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
